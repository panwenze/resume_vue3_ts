{
  "version": 3,
  "sources": ["../vue-draggable-next/dist/vue-draggable-next.esm-bundler.js"],
  "sourcesContent": ["/*!\n  * vue-draggable-next v2.1.0\n  * (c) 2021 Anish George\n  * @license MIT\n  */\nimport { defineComponent, h, resolveComponent } from 'vue';\n\n/**!\n * Sortable 1.14.0\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar version = \"1.14.0\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\n\n\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, _excluded);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    var threshold = sortable[expando].options.emptyInsertThreshold;\n    if (!threshold || lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    } // Safari ignores further event handling after mousedown\n\n\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // if there is a last element, it is the target\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n\n        target = firstChild;\n        targetRect = getRect(target);\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var spacer = 10;\n  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nfunction getConsole() {\r\n    if (typeof window !== 'undefined') {\r\n        return window.console;\r\n    }\r\n    return global.console;\r\n}\r\nconst console = getConsole();\r\nfunction cached(fn) {\r\n    const cache = Object.create(null);\r\n    return function cachedFn(str) {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    };\r\n}\r\nconst regex = /-(\\w)/g;\r\nconst camelize = cached((str) => str.replace(regex, (_, c) => (c ? c.toUpperCase() : '')));\r\nfunction removeNode(node) {\r\n    if (node.parentElement !== null) {\r\n        node.parentElement.removeChild(node);\r\n    }\r\n}\r\nfunction insertNodeAt(fatherNode, node, position) {\r\n    const refNode = position === 0\r\n        ? fatherNode.children[0]\r\n        : fatherNode.children[position - 1].nextSibling;\r\n    fatherNode.insertBefore(node, refNode);\r\n}\n\nfunction computeVmIndex(vnodes, element) {\r\n    return Object.values(vnodes).indexOf(element);\r\n}\r\nfunction computeIndexes(slots, children, isTransition, footerOffset) {\r\n    if (!slots) {\r\n        return [];\r\n    }\r\n    const elmFromNodes = Object.values(slots);\r\n    const footerIndex = children.length - footerOffset;\r\n    const rawIndexes = [...children].map((elt, idx) => idx >= footerIndex ? elmFromNodes.length : elmFromNodes.indexOf(elt));\r\n    return rawIndexes;\r\n}\r\nfunction emit(evtName, evtData) {\r\n    //@ts-ignore\r\n    this.$nextTick(() => this.$emit(evtName.toLowerCase(), evtData));\r\n}\r\nfunction delegateAndEmit(evtName) {\r\n    //@ts-ignore\r\n    return evtData => {\r\n        //@ts-ignore\r\n        if (this.realList !== null) {\r\n            //@ts-ignore\r\n            this['onDrag' + evtName](evtData);\r\n        }\r\n        //@ts-ignore\r\n        emit.call(this, evtName, evtData);\r\n    };\r\n}\r\nfunction isTransitionName(name) {\r\n    return ['transition-group', 'TransitionGroup'].includes(name);\r\n}\r\nfunction isTransition(slots) {\r\n    if (!slots || slots.length !== 1) {\r\n        return false;\r\n    }\r\n    // @ts-ignore\r\n    const [{ type }] = slots;\r\n    if (!type) {\r\n        return false;\r\n    }\r\n    //@ts-ignore\r\n    return isTransitionName(type.name);\r\n}\r\nfunction getComponentAttributes($attrs, componentData) {\r\n    if (!componentData) {\r\n        return $attrs;\r\n    }\r\n    return { ...componentData.props, ...componentData.attrs };\r\n}\r\nconst eventsListened = ['Start', 'Add', 'Remove', 'Update', 'End'];\r\nconst eventsToEmit = ['Choose', 'Unchoose', 'Sort', 'Filter', 'Clone'];\r\nconst readonlyProperties = ['Move', ...eventsListened, ...eventsToEmit].map(evt => 'on' + evt);\r\n// @ts-ignore\r\nlet draggingElement = null;\r\nconst props = {\r\n    options: Object,\r\n    list: {\r\n        type: Array,\r\n        required: false,\r\n        default: null,\r\n    },\r\n    noTransitionOnDrag: {\r\n        type: Boolean,\r\n        default: false,\r\n    },\r\n    clone: {\r\n        type: Function,\r\n        default: (original) => {\r\n            return original;\r\n        },\r\n    },\r\n    tag: {\r\n        type: String,\r\n        default: 'div',\r\n    },\r\n    move: {\r\n        type: Function,\r\n        default: null,\r\n    },\r\n    componentData: {\r\n        type: Object,\r\n        required: false,\r\n        default: null,\r\n    },\r\n    component: {\r\n        type: String,\r\n        default: null,\r\n    },\r\n    modelValue: {\r\n        type: Array,\r\n        required: false,\r\n        default: null,\r\n    },\r\n};\r\nconst VueDraggableNext = defineComponent({\r\n    name: 'VueDraggableNext',\r\n    inheritAttrs: false,\r\n    emits: [\r\n        'update:modelValue',\r\n        'move',\r\n        'change',\r\n        ...eventsListened.map(s => s.toLowerCase()),\r\n        ...eventsToEmit.map(s => s.toLowerCase()),\r\n    ],\r\n    props,\r\n    data() {\r\n        return {\r\n            transitionMode: false,\r\n            noneFunctionalComponentMode: false,\r\n            headerOffset: 0,\r\n            footerOffset: 0,\r\n            _sortable: {},\r\n            visibleIndexes: [],\r\n            context: {},\r\n        };\r\n    },\r\n    render() {\r\n        const slots = this.$slots.default ? this.$slots.default() : null;\r\n        const attrs = getComponentAttributes(this.$attrs, this.componentData);\r\n        if (!slots)\r\n            return h(this.getTag(), attrs, []);\r\n        this.transitionMode = isTransition(slots);\r\n        return h(this.getTag(), attrs, slots);\r\n    },\r\n    created() {\r\n        if (this.list !== null && this.modelValue !== null) {\r\n            console.error('list props are mutually exclusive! Please set one.');\r\n        }\r\n    },\r\n    mounted() {\r\n        const optionsAdded = {};\r\n        eventsListened.forEach(elt => {\r\n            optionsAdded['on' + elt] = delegateAndEmit.call(this, elt);\r\n        });\r\n        eventsToEmit.forEach(elt => {\r\n            optionsAdded['on' + elt] = emit.bind(this, elt);\r\n        });\r\n        const attributes = Object.keys(this.$attrs).reduce((res, key) => {\r\n            res[camelize(key)] = this.$attrs[key];\r\n            return res;\r\n        }, {});\r\n        const options = Object.assign({}, attributes, optionsAdded, {\r\n            onMove: (evt, originalEvent) => {\r\n                return this.onDragMove(evt, originalEvent);\r\n            },\r\n        });\r\n        !('draggable' in options) && (options.draggable = '>*');\r\n        const targetDomElement = this.$el.nodeType === 1 ? this.$el : this.$el.parentElement;\r\n        this._sortable = new Sortable(targetDomElement, options);\r\n        targetDomElement.__draggable_component__ = this;\r\n        this.computeIndexes();\r\n    },\r\n    beforeUnmount() {\r\n        try {\r\n            if (this._sortable !== undefined)\r\n                this._sortable.destroy();\r\n        }\r\n        catch (error) { }\r\n    },\r\n    computed: {\r\n        realList() {\r\n            return this.list ? this.list : this.modelValue;\r\n        },\r\n    },\r\n    watch: {\r\n        $attrs: {\r\n            handler(newOptionValue) {\r\n                this.updateOptions(newOptionValue);\r\n            },\r\n            deep: true,\r\n        },\r\n        realList() {\r\n            this.computeIndexes();\r\n        },\r\n    },\r\n    methods: {\r\n        getTag() {\r\n            return this.component ? resolveComponent(this.component) : this.tag;\r\n        },\r\n        updateOptions(newOptionValue) {\r\n            for (var property in newOptionValue) {\r\n                const value = camelize(property);\r\n                if (readonlyProperties.indexOf(value) === -1) {\r\n                    this._sortable.option(value, newOptionValue[property]);\r\n                }\r\n            }\r\n        },\r\n        getChildrenNodes() {\r\n            return this.$el.children;\r\n        },\r\n        computeIndexes() {\r\n            this.$nextTick(() => {\r\n                this.visibleIndexes = computeIndexes(this.getChildrenNodes(), this.$el.children, this.transitionMode, this.footerOffset);\r\n            });\r\n        },\r\n        getUnderlyingVm(htmlElt) {\r\n            const index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);\r\n            if (index === -1) {\r\n                //Edge case during move callback: related element might be\r\n                //an element different from collection\r\n                return null;\r\n            }\r\n            //@ts-ignore\r\n            const element = this.realList[index];\r\n            return { index, element };\r\n        },\r\n        emitChanges(evt) {\r\n            this.$nextTick(() => {\r\n                this.$emit('change', evt);\r\n            });\r\n        },\r\n        alterList(onList) {\r\n            if (this.list) {\r\n                onList(this.list);\r\n                return;\r\n            }\r\n            const newList = [...this.modelValue];\r\n            onList(newList);\r\n            this.$emit('update:modelValue', newList);\r\n        },\r\n        spliceList() {\r\n            const spliceList = (list) => list.splice(...arguments);\r\n            this.alterList(spliceList);\r\n        },\r\n        updatePosition(oldIndex, newIndex) {\r\n            const updatePosition = (list) => list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\r\n            this.alterList(updatePosition);\r\n        },\r\n        getVmIndex(domIndex) {\r\n            const indexes = this.visibleIndexes;\r\n            const numberIndexes = indexes.length;\r\n            return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];\r\n        },\r\n        getComponent() {\r\n            return this.$slots.default\r\n                ? //@ts-ignore\r\n                    this.$slots.default()[0].componentInstance\r\n                : null;\r\n        },\r\n        resetTransitionData(index) {\r\n            if (!this.noTransitionOnDrag || !this.transitionMode) {\r\n                return;\r\n            }\r\n            var nodes = this.getChildrenNodes();\r\n            nodes[index].data = null;\r\n            const transitionContainer = this.getComponent();\r\n            transitionContainer.children = [];\r\n            transitionContainer.kept = undefined;\r\n        },\r\n        onDragStart(evt) {\r\n            this.context = this.getUnderlyingVm(evt.item);\r\n            if (!this.context)\r\n                return;\r\n            evt.item._underlying_vm_ = this.clone(this.context.element);\r\n            draggingElement = evt.item;\r\n        },\r\n        onDragAdd(evt) {\r\n            const element = evt.item._underlying_vm_;\r\n            if (element === undefined) {\r\n                return;\r\n            }\r\n            removeNode(evt.item);\r\n            const newIndex = this.getVmIndex(evt.newIndex);\r\n            //@ts-ignore\r\n            this.spliceList(newIndex, 0, element);\r\n            this.computeIndexes();\r\n            const added = { element, newIndex };\r\n            this.emitChanges({ added });\r\n        },\r\n        onDragRemove(evt) {\r\n            insertNodeAt(this.$el, evt.item, evt.oldIndex);\r\n            if (evt.pullMode === 'clone') {\r\n                removeNode(evt.clone);\r\n                return;\r\n            }\r\n            if (!this.context)\r\n                return;\r\n            const oldIndex = this.context.index;\r\n            //@ts-ignore\r\n            this.spliceList(oldIndex, 1);\r\n            const removed = { element: this.context.element, oldIndex };\r\n            this.resetTransitionData(oldIndex);\r\n            this.emitChanges({ removed });\r\n        },\r\n        onDragUpdate(evt) {\r\n            removeNode(evt.item);\r\n            insertNodeAt(evt.from, evt.item, evt.oldIndex);\r\n            //@ts-ignore\r\n            const oldIndex = this.context.index;\r\n            const newIndex = this.getVmIndex(evt.newIndex);\r\n            this.updatePosition(oldIndex, newIndex);\r\n            //@ts-ignore\r\n            const moved = { element: this.context.element, oldIndex, newIndex };\r\n            this.emitChanges({ moved });\r\n        },\r\n        updateProperty(evt, propertyName) {\r\n            evt.hasOwnProperty(propertyName) &&\r\n                (evt[propertyName] += this.headerOffset);\r\n        },\r\n        onDragMove(evt, originalEvent) {\r\n            const onMove = this.move;\r\n            if (!onMove || !this.realList) {\r\n                return true;\r\n            }\r\n            const relatedContext = this.getRelatedContextFromMoveEvent(evt);\r\n            const draggedContext = this.context;\r\n            const futureIndex = this.computeFutureIndex(relatedContext, evt);\r\n            Object.assign(draggedContext, { futureIndex });\r\n            const sendEvt = Object.assign({}, evt, {\r\n                relatedContext,\r\n                draggedContext,\r\n            });\r\n            return onMove(sendEvt, originalEvent);\r\n        },\r\n        onDragEnd() {\r\n            this.computeIndexes();\r\n            draggingElement = null;\r\n        },\r\n        getTrargetedComponent(htmElement) {\r\n            return htmElement.__draggable_component__;\r\n        },\r\n        getRelatedContextFromMoveEvent({ to, related }) {\r\n            const component = this.getTrargetedComponent(to);\r\n            if (!component) {\r\n                return { component };\r\n            }\r\n            const list = component.realList;\r\n            const context = { list, component };\r\n            if (to !== related && list && component.getUnderlyingVm) {\r\n                const destination = component.getUnderlyingVm(related);\r\n                if (destination) {\r\n                    return Object.assign(destination, context);\r\n                }\r\n            }\r\n            return context;\r\n        },\r\n        computeFutureIndex(relatedContext, evt) {\r\n            const domChildren = [...evt.to.children].filter(el => el.style['display'] !== 'none');\r\n            if (domChildren.length === 0)\r\n                return 0;\r\n            const currentDOMIndex = domChildren.indexOf(evt.related);\r\n            const currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);\r\n            const draggedInList = domChildren.indexOf(draggingElement) !== -1;\r\n            return draggedInList || !evt.willInsertAfter\r\n                ? currentIndex\r\n                : currentIndex + 1;\r\n        },\r\n    },\r\n});\n\nexport { VueDraggableNext };\n"],
  "mappings": ";;;;;;;;;;AAAA,AAOA,AAMA,iBAAiB,QAAQ,gBAAgB;AACvC,MAAI,OAAO,OAAO,KAAK;AAEvB,MAAI,OAAO,uBAAuB;AAChC,QAAI,UAAU,OAAO,sBAAsB;AAE3C,QAAI,gBAAgB;AAClB,gBAAU,QAAQ,OAAO,SAAU,KAAK;AACtC,eAAO,OAAO,yBAAyB,QAAQ,KAAK;AAAA;AAAA;AAIxD,SAAK,KAAK,MAAM,MAAM;AAAA;AAGxB,SAAO;AAAA;AAGT,wBAAwB,QAAQ;AAC9B,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,QAAI,SAAS,UAAU,MAAM,OAAO,UAAU,KAAK;AAEnD,QAAI,IAAI,GAAG;AACT,cAAQ,OAAO,SAAS,MAAM,QAAQ,SAAU,KAAK;AACnD,wBAAgB,QAAQ,KAAK,OAAO;AAAA;AAAA,eAE7B,OAAO,2BAA2B;AAC3C,aAAO,iBAAiB,QAAQ,OAAO,0BAA0B;AAAA,WAC5D;AACL,cAAQ,OAAO,SAAS,QAAQ,SAAU,KAAK;AAC7C,eAAO,eAAe,QAAQ,KAAK,OAAO,yBAAyB,QAAQ;AAAA;AAAA;AAAA;AAKjF,SAAO;AAAA;AAGT,iBAAiB,KAAK;AACpB;AAEA,MAAI,OAAO,WAAW,cAAc,OAAO,OAAO,aAAa,UAAU;AACvE,cAAU,SAAU,MAAK;AACvB,aAAO,OAAO;AAAA;AAAA,SAEX;AACL,cAAU,SAAU,MAAK;AACvB,aAAO,QAAO,OAAO,WAAW,cAAc,KAAI,gBAAgB,UAAU,SAAQ,OAAO,YAAY,WAAW,OAAO;AAAA;AAAA;AAI7H,SAAO,QAAQ;AAAA;AAGjB,yBAAyB,KAAK,KAAK,OAAO;AACxC,MAAI,OAAO,KAAK;AACd,WAAO,eAAe,KAAK,KAAK;AAAA,MAC9B;AAAA,MACA,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA;AAAA,SAEP;AACL,QAAI,OAAO;AAAA;AAGb,SAAO;AAAA;AAGT,oBAAoB;AAClB,aAAW,OAAO,UAAU,SAAU,QAAQ;AAC5C,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAI,SAAS,UAAU;AAEvB,eAAS,OAAO,QAAQ;AACtB,YAAI,OAAO,UAAU,eAAe,KAAK,QAAQ,MAAM;AACrD,iBAAO,OAAO,OAAO;AAAA;AAAA;AAAA;AAK3B,WAAO;AAAA;AAGT,SAAO,SAAS,MAAM,MAAM;AAAA;AAG9B,uCAAuC,QAAQ,UAAU;AACvD,MAAI,UAAU;AAAM,WAAO;AAC3B,MAAI,SAAS;AACb,MAAI,aAAa,OAAO,KAAK;AAC7B,MAAI,KAAK;AAET,OAAK,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACtC,UAAM,WAAW;AACjB,QAAI,SAAS,QAAQ,QAAQ;AAAG;AAChC,WAAO,OAAO,OAAO;AAAA;AAGvB,SAAO;AAAA;AAGT,kCAAkC,QAAQ,UAAU;AAClD,MAAI,UAAU;AAAM,WAAO;AAE3B,MAAI,SAAS,8BAA8B,QAAQ;AAEnD,MAAI,KAAK;AAET,MAAI,OAAO,uBAAuB;AAChC,QAAI,mBAAmB,OAAO,sBAAsB;AAEpD,SAAK,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAC5C,YAAM,iBAAiB;AACvB,UAAI,SAAS,QAAQ,QAAQ;AAAG;AAChC,UAAI,CAAC,OAAO,UAAU,qBAAqB,KAAK,QAAQ;AAAM;AAC9D,aAAO,OAAO,OAAO;AAAA;AAAA;AAIzB,SAAO;AAAA;AAGT,IAAI,UAAU;AAEd,mBAAmB,SAAS;AAC1B,MAAI,OAAO,WAAW,eAAe,OAAO,WAAW;AACrD,WAAO,CAAC,CAAe,UAAU,UAAU,MAAM;AAAA;AAAA;AAIrD,IAAI,aAAa,UAAU;AAC3B,IAAI,OAAO,UAAU;AACrB,IAAI,UAAU,UAAU;AACxB,IAAI,SAAS,UAAU,cAAc,CAAC,UAAU,cAAc,CAAC,UAAU;AACzE,IAAI,MAAM,UAAU;AACpB,IAAI,mBAAmB,UAAU,cAAc,UAAU;AAEzD,IAAI,cAAc;AAAA,EAChB,SAAS;AAAA,EACT,SAAS;AAAA;AAGX,YAAY,IAAI,OAAO,IAAI;AACzB,KAAG,iBAAiB,OAAO,IAAI,CAAC,cAAc;AAAA;AAGhD,aAAa,IAAI,OAAO,IAAI;AAC1B,KAAG,oBAAoB,OAAO,IAAI,CAAC,cAAc;AAAA;AAGnD,iBAEA,IAEA,UAAU;AACR,MAAI,CAAC;AAAU;AACf,WAAS,OAAO,OAAQ,YAAW,SAAS,UAAU;AAEtD,MAAI,IAAI;AACN,QAAI;AACF,UAAI,GAAG,SAAS;AACd,eAAO,GAAG,QAAQ;AAAA,iBACT,GAAG,mBAAmB;AAC/B,eAAO,GAAG,kBAAkB;AAAA,iBACnB,GAAG,uBAAuB;AACnC,eAAO,GAAG,sBAAsB;AAAA;AAAA,aAE3B,GAAP;AACA,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA;AAGT,yBAAyB,IAAI;AAC3B,SAAO,GAAG,QAAQ,OAAO,YAAY,GAAG,KAAK,WAAW,GAAG,OAAO,GAAG;AAAA;AAGvE,iBAEA,IAEA,UAEA,KAAK,YAAY;AACf,MAAI,IAAI;AACN,UAAM,OAAO;AAEb,OAAG;AACD,UAAI,YAAY,QAAS,UAAS,OAAO,MAAM,GAAG,eAAe,OAAO,QAAQ,IAAI,YAAY,QAAQ,IAAI,cAAc,cAAc,OAAO,KAAK;AAClJ,eAAO;AAAA;AAGT,UAAI,OAAO;AAAK;AAAA,aAET,KAAK,gBAAgB;AAAA;AAGhC,SAAO;AAAA;AAGT,IAAI,UAAU;AAEd,qBAAqB,IAAI,MAAM,OAAO;AACpC,MAAI,MAAM,MAAM;AACd,QAAI,GAAG,WAAW;AAChB,SAAG,UAAU,QAAQ,QAAQ,UAAU;AAAA,WAClC;AACL,UAAI,YAAa,OAAM,GAAG,YAAY,KAAK,QAAQ,SAAS,KAAK,QAAQ,MAAM,OAAO,KAAK;AAC3F,SAAG,YAAa,aAAa,SAAQ,MAAM,OAAO,KAAK,QAAQ,SAAS;AAAA;AAAA;AAAA;AAK9E,aAAa,IAAI,MAAM,KAAK;AAC1B,MAAI,QAAQ,MAAM,GAAG;AAErB,MAAI,OAAO;AACT,QAAI,QAAQ,QAAQ;AAClB,UAAI,SAAS,eAAe,SAAS,YAAY,kBAAkB;AACjE,cAAM,SAAS,YAAY,iBAAiB,IAAI;AAAA,iBACvC,GAAG,cAAc;AAC1B,cAAM,GAAG;AAAA;AAGX,aAAO,SAAS,SAAS,MAAM,IAAI;AAAA,WAC9B;AACL,UAAI,CAAE,SAAQ,UAAU,KAAK,QAAQ,cAAc,IAAI;AACrD,eAAO,aAAa;AAAA;AAGtB,YAAM,QAAQ,MAAO,QAAO,QAAQ,WAAW,KAAK;AAAA;AAAA;AAAA;AAK1D,gBAAgB,IAAI,UAAU;AAC5B,MAAI,oBAAoB;AAExB,MAAI,OAAO,OAAO,UAAU;AAC1B,wBAAoB;AAAA,SACf;AACL,OAAG;AACD,UAAI,YAAY,IAAI,IAAI;AAExB,UAAI,aAAa,cAAc,QAAQ;AACrC,4BAAoB,YAAY,MAAM;AAAA;AAAA,aAIjC,CAAC,YAAa,MAAK,GAAG;AAAA;AAGjC,MAAI,WAAW,OAAO,aAAa,OAAO,mBAAmB,OAAO,aAAa,OAAO;AAGxF,SAAO,YAAY,IAAI,SAAS;AAAA;AAGlC,cAAc,KAAK,SAAS,UAAU;AACpC,MAAI,KAAK;AACP,QAAI,OAAO,IAAI,qBAAqB,UAChC,IAAI,GACJ,IAAI,KAAK;AAEb,QAAI,UAAU;AACZ,aAAO,IAAI,GAAG,KAAK;AACjB,iBAAS,KAAK,IAAI;AAAA;AAAA;AAItB,WAAO;AAAA;AAGT,SAAO;AAAA;AAGT,qCAAqC;AACnC,MAAI,mBAAmB,SAAS;AAEhC,MAAI,kBAAkB;AACpB,WAAO;AAAA,SACF;AACL,WAAO,SAAS;AAAA;AAAA;AAcpB,iBAAiB,IAAI,2BAA2B,2BAA2B,WAAW,WAAW;AAC/F,MAAI,CAAC,GAAG,yBAAyB,OAAO;AAAQ;AAChD,MAAI,QAAQ,KAAK,MAAM,QAAQ,OAAO,QAAQ;AAE9C,MAAI,OAAO,UAAU,GAAG,cAAc,OAAO,6BAA6B;AACxE,aAAS,GAAG;AACZ,UAAM,OAAO;AACb,WAAO,OAAO;AACd,aAAS,OAAO;AAChB,YAAQ,OAAO;AACf,aAAS,OAAO;AAChB,YAAQ,OAAO;AAAA,SACV;AACL,UAAM;AACN,WAAO;AACP,aAAS,OAAO;AAChB,YAAQ,OAAO;AACf,aAAS,OAAO;AAChB,YAAQ,OAAO;AAAA;AAGjB,MAAK,8BAA6B,8BAA8B,OAAO,QAAQ;AAE7E,gBAAY,aAAa,GAAG;AAG5B,QAAI,CAAC,YAAY;AACf,SAAG;AACD,YAAI,aAAa,UAAU,yBAA0B,KAAI,WAAW,iBAAiB,UAAU,6BAA6B,IAAI,WAAW,gBAAgB,WAAW;AACpK,cAAI,gBAAgB,UAAU;AAE9B,iBAAO,cAAc,MAAM,SAAS,IAAI,WAAW;AACnD,kBAAQ,cAAc,OAAO,SAAS,IAAI,WAAW;AACrD,mBAAS,MAAM,OAAO;AACtB,kBAAQ,OAAO,OAAO;AACtB;AAAA;AAAA,eAIK,YAAY,UAAU;AAAA;AAAA;AAInC,MAAI,aAAa,OAAO,QAAQ;AAE9B,QAAI,WAAW,OAAO,aAAa,KAC/B,SAAS,YAAY,SAAS,GAC9B,SAAS,YAAY,SAAS;AAElC,QAAI,UAAU;AACZ,aAAO;AACP,cAAQ;AACR,eAAS;AACT,gBAAU;AACV,eAAS,MAAM;AACf,cAAQ,OAAO;AAAA;AAAA;AAInB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAYJ,wBAAwB,IAAI,QAAQ,YAAY;AAC9C,MAAI,SAAS,2BAA2B,IAAI,OACxC,YAAY,QAAQ,IAAI;AAG5B,SAAO,QAAQ;AACb,QAAI,gBAAgB,QAAQ,QAAQ,aAChC,UAAU;AAEd,QAAI,eAAe,SAAS,eAAe,QAAQ;AACjD,gBAAU,aAAa;AAAA,WAClB;AACL,gBAAU,aAAa;AAAA;AAGzB,QAAI,CAAC;AAAS,aAAO;AACrB,QAAI,WAAW;AAA6B;AAC5C,aAAS,2BAA2B,QAAQ;AAAA;AAG9C,SAAO;AAAA;AAYT,kBAAkB,IAAI,UAAU,SAAS,eAAe;AACtD,MAAI,eAAe,GACf,IAAI,GACJ,WAAW,GAAG;AAElB,SAAO,IAAI,SAAS,QAAQ;AAC1B,QAAI,SAAS,GAAG,MAAM,YAAY,UAAU,SAAS,OAAO,SAAS,SAAU,kBAAiB,SAAS,OAAO,SAAS,YAAY,QAAQ,SAAS,IAAI,QAAQ,WAAW,IAAI,QAAQ;AACvL,UAAI,iBAAiB,UAAU;AAC7B,eAAO,SAAS;AAAA;AAGlB;AAAA;AAGF;AAAA;AAGF,SAAO;AAAA;AAUT,mBAAmB,IAAI,UAAU;AAC/B,MAAI,OAAO,GAAG;AAEd,SAAO,QAAS,UAAS,SAAS,SAAS,IAAI,MAAM,eAAe,UAAU,YAAY,CAAC,QAAQ,MAAM,YAAY;AACnH,WAAO,KAAK;AAAA;AAGd,SAAO,QAAQ;AAAA;AAWjB,eAAe,IAAI,UAAU;AAC3B,MAAI,SAAQ;AAEZ,MAAI,CAAC,MAAM,CAAC,GAAG,YAAY;AACzB,WAAO;AAAA;AAKT,SAAO,KAAK,GAAG,wBAAwB;AACrC,QAAI,GAAG,SAAS,kBAAkB,cAAc,OAAO,SAAS,SAAU,EAAC,YAAY,QAAQ,IAAI,YAAY;AAC7G;AAAA;AAAA;AAIJ,SAAO;AAAA;AAUT,iCAAiC,IAAI;AACnC,MAAI,aAAa,GACb,YAAY,GACZ,cAAc;AAElB,MAAI,IAAI;AACN,OAAG;AACD,UAAI,WAAW,OAAO,KAClB,SAAS,SAAS,GAClB,SAAS,SAAS;AACtB,oBAAc,GAAG,aAAa;AAC9B,mBAAa,GAAG,YAAY;AAAA,aACrB,OAAO,eAAgB,MAAK,GAAG;AAAA;AAG1C,SAAO,CAAC,YAAY;AAAA;AAUtB,uBAAuB,KAAK,KAAK;AAC/B,WAAS,KAAK,KAAK;AACjB,QAAI,CAAC,IAAI,eAAe;AAAI;AAE5B,aAAS,OAAO,KAAK;AACnB,UAAI,IAAI,eAAe,QAAQ,IAAI,SAAS,IAAI,GAAG;AAAM,eAAO,OAAO;AAAA;AAAA;AAI3E,SAAO;AAAA;AAGT,oCAAoC,IAAI,aAAa;AAEnD,MAAI,CAAC,MAAM,CAAC,GAAG;AAAuB,WAAO;AAC7C,MAAI,OAAO;AACX,MAAI,UAAU;AAEd,KAAG;AAED,QAAI,KAAK,cAAc,KAAK,eAAe,KAAK,eAAe,KAAK,cAAc;AAChF,UAAI,UAAU,IAAI;AAElB,UAAI,KAAK,cAAc,KAAK,eAAgB,SAAQ,aAAa,UAAU,QAAQ,aAAa,aAAa,KAAK,eAAe,KAAK,gBAAiB,SAAQ,aAAa,UAAU,QAAQ,aAAa,WAAW;AACpN,YAAI,CAAC,KAAK,yBAAyB,SAAS,SAAS;AAAM,iBAAO;AAClE,YAAI,WAAW;AAAa,iBAAO;AACnC,kBAAU;AAAA;AAAA;AAAA,WAKP,OAAO,KAAK;AAErB,SAAO;AAAA;AAGT,gBAAgB,KAAK,KAAK;AACxB,MAAI,OAAO,KAAK;AACd,aAAS,OAAO,KAAK;AACnB,UAAI,IAAI,eAAe,MAAM;AAC3B,YAAI,OAAO,IAAI;AAAA;AAAA;AAAA;AAKrB,SAAO;AAAA;AAGT,qBAAqB,OAAO,OAAO;AACjC,SAAO,KAAK,MAAM,MAAM,SAAS,KAAK,MAAM,MAAM,QAAQ,KAAK,MAAM,MAAM,UAAU,KAAK,MAAM,MAAM,SAAS,KAAK,MAAM,MAAM,YAAY,KAAK,MAAM,MAAM,WAAW,KAAK,MAAM,MAAM,WAAW,KAAK,MAAM,MAAM;AAAA;AAGvN,IAAI;AAEJ,kBAAkB,UAAU,IAAI;AAC9B,SAAO,WAAY;AACjB,QAAI,CAAC,kBAAkB;AACrB,UAAI,OAAO,WACP,QAAQ;AAEZ,UAAI,KAAK,WAAW,GAAG;AACrB,iBAAS,KAAK,OAAO,KAAK;AAAA,aACrB;AACL,iBAAS,MAAM,OAAO;AAAA;AAGxB,yBAAmB,WAAW,WAAY;AACxC,2BAAmB;AAAA,SAClB;AAAA;AAAA;AAAA;AAKT,0BAA0B;AACxB,eAAa;AACb,qBAAmB;AAAA;AAGrB,kBAAkB,IAAI,GAAG,GAAG;AAC1B,KAAG,cAAc;AACjB,KAAG,aAAa;AAAA;AAGlB,eAAe,IAAI;AACjB,MAAI,UAAU,OAAO;AACrB,MAAI,IAAI,OAAO,UAAU,OAAO;AAEhC,MAAI,WAAW,QAAQ,KAAK;AAC1B,WAAO,QAAQ,IAAI,IAAI,UAAU;AAAA,aACxB,GAAG;AACZ,WAAO,EAAE,IAAI,MAAM,MAAM;AAAA,SACpB;AACL,WAAO,GAAG,UAAU;AAAA;AAAA;AAIxB,IAAI,UAAU,aAAa,IAAI,OAAO;AAEtC,iCAAiC;AAC/B,MAAI,kBAAkB,IAClB;AACJ,SAAO;AAAA,IACL,uBAAuB,iCAAiC;AACtD,wBAAkB;AAClB,UAAI,CAAC,KAAK,QAAQ;AAAW;AAC7B,UAAI,WAAW,GAAG,MAAM,KAAK,KAAK,GAAG;AACrC,eAAS,QAAQ,SAAU,OAAO;AAChC,YAAI,IAAI,OAAO,eAAe,UAAU,UAAU,SAAS;AAAO;AAClE,wBAAgB,KAAK;AAAA,UACnB,QAAQ;AAAA,UACR,MAAM,QAAQ;AAAA;AAGhB,YAAI,WAAW,eAAe,IAAI,gBAAgB,gBAAgB,SAAS,GAAG;AAG9E,YAAI,MAAM,uBAAuB;AAC/B,cAAI,cAAc,OAAO,OAAO;AAEhC,cAAI,aAAa;AACf,qBAAS,OAAO,YAAY;AAC5B,qBAAS,QAAQ,YAAY;AAAA;AAAA;AAIjC,cAAM,WAAW;AAAA;AAAA;AAAA,IAGrB,mBAAmB,2BAA2B,OAAO;AACnD,sBAAgB,KAAK;AAAA;AAAA,IAEvB,sBAAsB,8BAA8B,QAAQ;AAC1D,sBAAgB,OAAO,cAAc,iBAAiB;AAAA,QACpD;AAAA,UACE;AAAA;AAAA,IAEN,YAAY,oBAAoB,UAAU;AACxC,UAAI,QAAQ;AAEZ,UAAI,CAAC,KAAK,QAAQ,WAAW;AAC3B,qBAAa;AACb,YAAI,OAAO,aAAa;AAAY;AACpC;AAAA;AAGF,UAAI,YAAY,OACZ,gBAAgB;AACpB,sBAAgB,QAAQ,SAAU,OAAO;AACvC,YAAI,OAAO,GACP,SAAS,MAAM,QACf,WAAW,OAAO,UAClB,SAAS,QAAQ,SACjB,eAAe,OAAO,cACtB,aAAa,OAAO,YACpB,gBAAgB,MAAM,MACtB,eAAe,OAAO,QAAQ;AAElC,YAAI,cAAc;AAEhB,iBAAO,OAAO,aAAa;AAC3B,iBAAO,QAAQ,aAAa;AAAA;AAG9B,eAAO,SAAS;AAEhB,YAAI,OAAO,uBAAuB;AAEhC,cAAI,YAAY,cAAc,WAAW,CAAC,YAAY,UAAU,WAC/D,eAAc,MAAM,OAAO,OAAQ,eAAc,OAAO,OAAO,UAAW,UAAS,MAAM,OAAO,OAAQ,UAAS,OAAO,OAAO,OAAO;AAErI,mBAAO,kBAAkB,eAAe,cAAc,YAAY,MAAM;AAAA;AAAA;AAK5E,YAAI,CAAC,YAAY,QAAQ,WAAW;AAClC,iBAAO,eAAe;AACtB,iBAAO,aAAa;AAEpB,cAAI,CAAC,MAAM;AACT,mBAAO,MAAM,QAAQ;AAAA;AAGvB,gBAAM,QAAQ,QAAQ,eAAe,QAAQ;AAAA;AAG/C,YAAI,MAAM;AACR,sBAAY;AACZ,0BAAgB,KAAK,IAAI,eAAe;AACxC,uBAAa,OAAO;AACpB,iBAAO,sBAAsB,WAAW,WAAY;AAClD,mBAAO,gBAAgB;AACvB,mBAAO,eAAe;AACtB,mBAAO,WAAW;AAClB,mBAAO,aAAa;AACpB,mBAAO,wBAAwB;AAAA,aAC9B;AACH,iBAAO,wBAAwB;AAAA;AAAA;AAGnC,mBAAa;AAEb,UAAI,CAAC,WAAW;AACd,YAAI,OAAO,aAAa;AAAY;AAAA,aAC/B;AACL,8BAAsB,WAAW,WAAY;AAC3C,cAAI,OAAO,aAAa;AAAY;AAAA,WACnC;AAAA;AAGL,wBAAkB;AAAA;AAAA,IAEpB,SAAS,iBAAiB,QAAQ,aAAa,QAAQ,UAAU;AAC/D,UAAI,UAAU;AACZ,YAAI,QAAQ,cAAc;AAC1B,YAAI,QAAQ,aAAa;AACzB,YAAI,WAAW,OAAO,KAAK,KACvB,SAAS,YAAY,SAAS,GAC9B,SAAS,YAAY,SAAS,GAC9B,aAAc,aAAY,OAAO,OAAO,QAAS,WAAU,IAC3D,aAAc,aAAY,MAAM,OAAO,OAAQ,WAAU;AAC7D,eAAO,aAAa,CAAC,CAAC;AACtB,eAAO,aAAa,CAAC,CAAC;AACtB,YAAI,QAAQ,aAAa,iBAAiB,aAAa,QAAQ,aAAa;AAC5E,aAAK,kBAAkB,QAAQ;AAE/B,YAAI,QAAQ,cAAc,eAAe,WAAW,OAAQ,MAAK,QAAQ,SAAS,MAAM,KAAK,QAAQ,SAAS;AAC9G,YAAI,QAAQ,aAAa;AACzB,eAAO,OAAO,aAAa,YAAY,aAAa,OAAO;AAC3D,eAAO,WAAW,WAAW,WAAY;AACvC,cAAI,QAAQ,cAAc;AAC1B,cAAI,QAAQ,aAAa;AACzB,iBAAO,WAAW;AAClB,iBAAO,aAAa;AACpB,iBAAO,aAAa;AAAA,WACnB;AAAA;AAAA;AAAA;AAAA;AAMX,iBAAiB,QAAQ;AACvB,SAAO,OAAO;AAAA;AAGhB,2BAA2B,eAAe,UAAU,QAAQ,SAAS;AACnE,SAAO,KAAK,KAAK,KAAK,IAAI,SAAS,MAAM,cAAc,KAAK,KAAK,KAAK,IAAI,SAAS,OAAO,cAAc,MAAM,MAAM,KAAK,KAAK,KAAK,IAAI,SAAS,MAAM,OAAO,KAAK,KAAK,KAAK,IAAI,SAAS,OAAO,OAAO,MAAM,MAAM,QAAQ;AAAA;AAG7N,IAAI,UAAU;AACd,IAAI,WAAW;AAAA,EACb,qBAAqB;AAAA;AAEvB,IAAI,gBAAgB;AAAA,EAClB,OAAO,eAAe,QAAQ;AAE5B,aAAS,WAAU,UAAU;AAC3B,UAAI,SAAS,eAAe,YAAW,CAAE,YAAU,SAAS;AAC1D,eAAO,WAAU,SAAS;AAAA;AAAA;AAI9B,YAAQ,QAAQ,SAAU,GAAG;AAC3B,UAAI,EAAE,eAAe,OAAO,YAAY;AACtC,cAAM,iCAAiC,OAAO,OAAO,YAAY;AAAA;AAAA;AAGrE,YAAQ,KAAK;AAAA;AAAA,EAEf,aAAa,qBAAqB,WAAW,UAAU,KAAK;AAC1D,QAAI,QAAQ;AAEZ,SAAK,gBAAgB;AAErB,QAAI,SAAS,WAAY;AACvB,YAAM,gBAAgB;AAAA;AAGxB,QAAI,kBAAkB,YAAY;AAClC,YAAQ,QAAQ,SAAU,QAAQ;AAChC,UAAI,CAAC,SAAS,OAAO;AAAa;AAElC,UAAI,SAAS,OAAO,YAAY,kBAAkB;AAChD,iBAAS,OAAO,YAAY,iBAAiB,eAAe;AAAA,UAC1D;AAAA,WACC;AAAA;AAKL,UAAI,SAAS,QAAQ,OAAO,eAAe,SAAS,OAAO,YAAY,YAAY;AACjF,iBAAS,OAAO,YAAY,WAAW,eAAe;AAAA,UACpD;AAAA,WACC;AAAA;AAAA;AAAA;AAAA,EAIT,mBAAmB,2BAA2B,UAAU,IAAI,WAAU,SAAS;AAC7E,YAAQ,QAAQ,SAAU,QAAQ;AAChC,UAAI,aAAa,OAAO;AACxB,UAAI,CAAC,SAAS,QAAQ,eAAe,CAAC,OAAO;AAAqB;AAClE,UAAI,cAAc,IAAI,OAAO,UAAU,IAAI,SAAS;AACpD,kBAAY,WAAW;AACvB,kBAAY,UAAU,SAAS;AAC/B,eAAS,cAAc;AAEvB,eAAS,WAAU,YAAY;AAAA;AAGjC,aAAS,WAAU,SAAS,SAAS;AACnC,UAAI,CAAC,SAAS,QAAQ,eAAe;AAAS;AAC9C,UAAI,WAAW,KAAK,aAAa,UAAU,SAAQ,SAAS,QAAQ;AAEpE,UAAI,OAAO,aAAa,aAAa;AACnC,iBAAS,QAAQ,WAAU;AAAA;AAAA;AAAA;AAAA,EAIjC,oBAAoB,4BAA4B,MAAM,UAAU;AAC9D,QAAI,kBAAkB;AACtB,YAAQ,QAAQ,SAAU,QAAQ;AAChC,UAAI,OAAO,OAAO,oBAAoB;AAAY;AAElD,eAAS,iBAAiB,OAAO,gBAAgB,KAAK,SAAS,OAAO,aAAa;AAAA;AAErF,WAAO;AAAA;AAAA,EAET,cAAc,sBAAsB,UAAU,MAAM,OAAO;AACzD,QAAI;AACJ,YAAQ,QAAQ,SAAU,QAAQ;AAEhC,UAAI,CAAC,SAAS,OAAO;AAAa;AAElC,UAAI,OAAO,mBAAmB,OAAO,OAAO,gBAAgB,UAAU,YAAY;AAChF,wBAAgB,OAAO,gBAAgB,MAAM,KAAK,SAAS,OAAO,aAAa;AAAA;AAAA;AAGnF,WAAO;AAAA;AAAA;AAIX,uBAAuB,MAAM;AAC3B,MAAI,WAAW,KAAK,UAChB,UAAS,KAAK,QACd,OAAO,KAAK,MACZ,WAAW,KAAK,UAChB,WAAU,KAAK,SACf,OAAO,KAAK,MACZ,SAAS,KAAK,QACd,YAAW,KAAK,UAChB,YAAW,KAAK,UAChB,qBAAoB,KAAK,mBACzB,qBAAoB,KAAK,mBACzB,gBAAgB,KAAK,eACrB,eAAc,KAAK,aACnB,uBAAuB,KAAK;AAChC,aAAW,YAAY,WAAU,QAAO;AACxC,MAAI,CAAC;AAAU;AACf,MAAI,KACA,UAAU,SAAS,SACnB,SAAS,OAAO,KAAK,OAAO,GAAG,gBAAgB,KAAK,OAAO;AAE/D,MAAI,OAAO,eAAe,CAAC,cAAc,CAAC,MAAM;AAC9C,UAAM,IAAI,YAAY,MAAM;AAAA,MAC1B,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,SAET;AACL,UAAM,SAAS,YAAY;AAC3B,QAAI,UAAU,MAAM,MAAM;AAAA;AAG5B,MAAI,KAAK,QAAQ;AACjB,MAAI,OAAO,UAAU;AACrB,MAAI,OAAO,YAAY;AACvB,MAAI,QAAQ;AACZ,MAAI,WAAW;AACf,MAAI,WAAW;AACf,MAAI,oBAAoB;AACxB,MAAI,oBAAoB;AACxB,MAAI,gBAAgB;AACpB,MAAI,WAAW,eAAc,aAAY,cAAc;AAEvD,MAAI,qBAAqB,eAAe,eAAe,IAAI,uBAAuB,cAAc,mBAAmB,MAAM;AAEzH,WAAS,WAAU,oBAAoB;AACrC,QAAI,WAAU,mBAAmB;AAAA;AAGnC,MAAI,SAAQ;AACV,YAAO,cAAc;AAAA;AAGvB,MAAI,QAAQ,SAAS;AACnB,YAAQ,QAAQ,KAAK,UAAU;AAAA;AAAA;AAInC,IAAI,YAAY,CAAC;AAEjB,IAAI,eAAc,sBAAqB,WAAW,UAAU;AAC1D,MAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK,IAC3E,gBAAgB,KAAK,KACrB,OAAO,yBAAyB,MAAM;AAE1C,gBAAc,YAAY,KAAK,UAAU,WAAW,UAAU,eAAe;AAAA,IAC3E;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,aAAa;AAAA,IACb;AAAA,IACA,gBAAgB,SAAS;AAAA,IACzB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,oBAAoB;AAAA,IACpB,sBAAsB;AAAA,IACtB,gBAAgB,0BAA0B;AACxC,oBAAc;AAAA;AAAA,IAEhB,eAAe,yBAAyB;AACtC,oBAAc;AAAA;AAAA,IAEhB,uBAAuB,+BAA+B,MAAM;AAC1D,qBAAe;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA;AAAA;AAAA,KAGH;AAAA;AAGL,wBAAwB,MAAM;AAC5B,gBAAc,eAAe;AAAA,IAC3B;AAAA,IACA;AAAA,IACA,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,KACC;AAAA;AAGL,IAAI;AAAJ,IACI;AADJ,IAEI;AAFJ,IAGI;AAHJ,IAII;AAJJ,IAKI;AALJ,IAMI;AANJ,IAOI;AAPJ,IAQI;AARJ,IASI;AATJ,IAUI;AAVJ,IAWI;AAXJ,IAYI;AAZJ,IAaI;AAbJ,IAcI,sBAAsB;AAd1B,IAeI,kBAAkB;AAftB,IAgBI,YAAY;AAhBhB,IAiBI;AAjBJ,IAkBI;AAlBJ,IAmBI;AAnBJ,IAoBI;AApBJ,IAqBI;AArBJ,IAsBI;AAtBJ,IAuBI;AAvBJ,IAwBI;AAxBJ,IAyBI;AAzBJ,IA0BI,wBAAwB;AA1B5B,IA2BI,yBAAyB;AA3B7B,IA4BI;AA5BJ,IA8BA;AA9BA,IA+BI,mCAAmC;AA/BvC,IAiCA,UAAU;AAjCV,IAkCI,oBAAoB;AAGxB,IAAI,iBAAiB,OAAO,aAAa;AAAzC,IACI,0BAA0B;AAD9B,IAEI,mBAAmB,QAAQ,aAAa,aAAa;AAFzD,IAIA,mBAAmB,kBAAkB,CAAC,oBAAoB,CAAC,OAAO,eAAe,SAAS,cAAc;AAJxG,IAKI,0BAA0B,WAAY;AACxC,MAAI,CAAC;AAAgB;AAErB,MAAI,YAAY;AACd,WAAO;AAAA;AAGT,MAAI,KAAK,SAAS,cAAc;AAChC,KAAG,MAAM,UAAU;AACnB,SAAO,GAAG,MAAM,kBAAkB;AAAA;AAdpC,IAgBI,mBAAmB,2BAA0B,IAAI,SAAS;AAC5D,MAAI,QAAQ,IAAI,KACZ,UAAU,SAAS,MAAM,SAAS,SAAS,MAAM,eAAe,SAAS,MAAM,gBAAgB,SAAS,MAAM,mBAAmB,SAAS,MAAM,mBAChJ,SAAS,SAAS,IAAI,GAAG,UACzB,SAAS,SAAS,IAAI,GAAG,UACzB,gBAAgB,UAAU,IAAI,SAC9B,iBAAiB,UAAU,IAAI,SAC/B,kBAAkB,iBAAiB,SAAS,cAAc,cAAc,SAAS,cAAc,eAAe,QAAQ,QAAQ,OAC9H,mBAAmB,kBAAkB,SAAS,eAAe,cAAc,SAAS,eAAe,eAAe,QAAQ,QAAQ;AAEtI,MAAI,MAAM,YAAY,QAAQ;AAC5B,WAAO,MAAM,kBAAkB,YAAY,MAAM,kBAAkB,mBAAmB,aAAa;AAAA;AAGrG,MAAI,MAAM,YAAY,QAAQ;AAC5B,WAAO,MAAM,oBAAoB,MAAM,KAAK,UAAU,IAAI,aAAa;AAAA;AAGzE,MAAI,UAAU,cAAc,YAAY,cAAc,aAAa,QAAQ;AACzE,QAAI,qBAAqB,cAAc,aAAa,SAAS,SAAS;AACtE,WAAO,UAAW,gBAAe,UAAU,UAAU,eAAe,UAAU,sBAAsB,aAAa;AAAA;AAGnH,SAAO,UAAW,eAAc,YAAY,WAAW,cAAc,YAAY,UAAU,cAAc,YAAY,WAAW,cAAc,YAAY,UAAU,mBAAmB,WAAW,MAAM,sBAAsB,UAAU,UAAU,MAAM,sBAAsB,UAAU,kBAAkB,mBAAmB,WAAW,aAAa;AAAA;AAvCvV,IAyCI,qBAAqB,6BAA4B,UAAU,YAAY,UAAU;AACnF,MAAI,cAAc,WAAW,SAAS,OAAO,SAAS,KAClD,cAAc,WAAW,SAAS,QAAQ,SAAS,QACnD,kBAAkB,WAAW,SAAS,QAAQ,SAAS,QACvD,cAAc,WAAW,WAAW,OAAO,WAAW,KACtD,cAAc,WAAW,WAAW,QAAQ,WAAW,QACvD,kBAAkB,WAAW,WAAW,QAAQ,WAAW;AAC/D,SAAO,gBAAgB,eAAe,gBAAgB,eAAe,cAAc,kBAAkB,MAAM,cAAc,kBAAkB;AAAA;AAhD7I,IAyDA,8BAA8B,sCAAqC,GAAG,GAAG;AACvE,MAAI;AACJ,YAAU,KAAK,SAAU,UAAU;AACjC,QAAI,YAAY,SAAS,SAAS,QAAQ;AAC1C,QAAI,CAAC,aAAa,UAAU;AAAW;AACvC,QAAI,OAAO,QAAQ,WACf,qBAAqB,KAAK,KAAK,OAAO,aAAa,KAAK,KAAK,QAAQ,WACrE,mBAAmB,KAAK,KAAK,MAAM,aAAa,KAAK,KAAK,SAAS;AAEvE,QAAI,sBAAsB,kBAAkB;AAC1C,aAAO,MAAM;AAAA;AAAA;AAGjB,SAAO;AAAA;AAtET,IAwEI,gBAAgB,wBAAuB,SAAS;AAClD,gBAAc,OAAO,MAAM;AACzB,WAAO,SAAU,IAAI,MAAM,SAAQ,KAAK;AACtC,UAAI,YAAY,GAAG,QAAQ,MAAM,QAAQ,KAAK,QAAQ,MAAM,QAAQ,GAAG,QAAQ,MAAM,SAAS,KAAK,QAAQ,MAAM;AAEjH,UAAI,SAAS,QAAS,SAAQ,YAAY;AAGxC,eAAO;AAAA,iBACE,SAAS,QAAQ,UAAU,OAAO;AAC3C,eAAO;AAAA,iBACE,QAAQ,UAAU,SAAS;AACpC,eAAO;AAAA,iBACE,OAAO,UAAU,YAAY;AACtC,eAAO,KAAK,MAAM,IAAI,MAAM,SAAQ,MAAM,MAAM,IAAI,MAAM,SAAQ;AAAA,aAC7D;AACL,YAAI,aAAc,QAAO,KAAK,MAAM,QAAQ,MAAM;AAClD,eAAO,UAAU,QAAQ,OAAO,UAAU,YAAY,UAAU,cAAc,MAAM,QAAQ,MAAM,QAAQ,cAAc;AAAA;AAAA;AAAA;AAK9H,MAAI,QAAQ;AACZ,MAAI,gBAAgB,QAAQ;AAE5B,MAAI,CAAC,iBAAiB,QAAQ,kBAAkB,UAAU;AACxD,oBAAgB;AAAA,MACd,MAAM;AAAA;AAAA;AAIV,QAAM,OAAO,cAAc;AAC3B,QAAM,YAAY,KAAK,cAAc,MAAM;AAC3C,QAAM,WAAW,KAAK,cAAc;AACpC,QAAM,cAAc,cAAc;AAClC,UAAQ,QAAQ;AAAA;AA3GlB,IA6GI,sBAAsB,gCAA+B;AACvD,MAAI,CAAC,2BAA2B,SAAS;AACvC,QAAI,SAAS,WAAW;AAAA;AAAA;AA/G5B,IAkHI,wBAAwB,kCAAiC;AAC3D,MAAI,CAAC,2BAA2B,SAAS;AACvC,QAAI,SAAS,WAAW;AAAA;AAAA;AAK5B,IAAI,gBAAgB;AAClB,WAAS,iBAAiB,SAAS,SAAU,KAAK;AAChD,QAAI,iBAAiB;AACnB,UAAI;AACJ,UAAI,mBAAmB,IAAI;AAC3B,UAAI,4BAA4B,IAAI;AACpC,wBAAkB;AAClB,aAAO;AAAA;AAAA,KAER;AAAA;AAGL,IAAI,gCAAgC,wCAAuC,KAAK;AAC9E,MAAI,QAAQ;AACV,UAAM,IAAI,UAAU,IAAI,QAAQ,KAAK;AAErC,QAAI,UAAU,4BAA4B,IAAI,SAAS,IAAI;AAE3D,QAAI,SAAS;AAEX,UAAI,QAAQ;AAEZ,eAAS,KAAK,KAAK;AACjB,YAAI,IAAI,eAAe,IAAI;AACzB,gBAAM,KAAK,IAAI;AAAA;AAAA;AAInB,YAAM,SAAS,MAAM,SAAS;AAC9B,YAAM,iBAAiB;AACvB,YAAM,kBAAkB;AAExB,cAAQ,SAAS,YAAY;AAAA;AAAA;AAAA;AAKnC,IAAI,wBAAwB,gCAA+B,KAAK;AAC9D,MAAI,QAAQ;AACV,WAAO,WAAW,SAAS,iBAAiB,IAAI;AAAA;AAAA;AAUpD,kBAAkB,IAAI,SAAS;AAC7B,MAAI,CAAE,OAAM,GAAG,YAAY,GAAG,aAAa,IAAI;AAC7C,UAAM,8CAA8C,OAAO,GAAG,SAAS,KAAK;AAAA;AAG9E,OAAK,KAAK;AAEV,OAAK,UAAU,UAAU,SAAS,IAAI;AAEtC,KAAG,WAAW;AACd,MAAI,YAAW;AAAA,IACb,OAAO;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA,IACV,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,WAAW,WAAW,KAAK,GAAG,YAAY,QAAQ;AAAA,IAClD,eAAe;AAAA,IAEf,YAAY;AAAA,IAEZ,uBAAuB;AAAA,IAEvB,mBAAmB;AAAA,IACnB,WAAW,qBAAqB;AAC9B,aAAO,iBAAiB,IAAI,KAAK;AAAA;AAAA,IAEnC,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,SAAS,iBAAiB,cAAc,SAAQ;AAC9C,mBAAa,QAAQ,QAAQ,QAAO;AAAA;AAAA,IAEtC,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,OAAO;AAAA,IACP,kBAAkB;AAAA,IAClB,qBAAsB,QAAO,WAAW,SAAS,QAAQ,SAAS,OAAO,kBAAkB,OAAO;AAAA,IAClG,eAAe;AAAA,IACf,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,IACnB,gBAAgB;AAAA,MACd,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEL,gBAAgB,SAAS,mBAAmB,SAAS,kBAAkB,UAAU,CAAC;AAAA,IAClF,sBAAsB;AAAA;AAExB,gBAAc,kBAAkB,MAAM,IAAI;AAE1C,WAAS,QAAQ,WAAU;AACzB,KAAE,SAAQ,YAAa,SAAQ,QAAQ,UAAS;AAAA;AAGlD,gBAAc;AAGd,WAAS,MAAM,MAAM;AACnB,QAAI,GAAG,OAAO,OAAO,OAAO,OAAO,KAAK,QAAQ,YAAY;AAC1D,WAAK,MAAM,KAAK,IAAI,KAAK;AAAA;AAAA;AAK7B,OAAK,kBAAkB,QAAQ,gBAAgB,QAAQ;AAEvD,MAAI,KAAK,iBAAiB;AAExB,SAAK,QAAQ,sBAAsB;AAAA;AAIrC,MAAI,QAAQ,gBAAgB;AAC1B,OAAG,IAAI,eAAe,KAAK;AAAA,SACtB;AACL,OAAG,IAAI,aAAa,KAAK;AACzB,OAAG,IAAI,cAAc,KAAK;AAAA;AAG5B,MAAI,KAAK,iBAAiB;AACxB,OAAG,IAAI,YAAY;AACnB,OAAG,IAAI,aAAa;AAAA;AAGtB,YAAU,KAAK,KAAK;AAEpB,UAAQ,SAAS,QAAQ,MAAM,OAAO,KAAK,KAAK,QAAQ,MAAM,IAAI,SAAS;AAE3E,WAAS,MAAM;AAAA;AAGjB,SAAS,YAET;AAAA,EACE,aAAa;AAAA,EACb,kBAAkB,0BAA0B,QAAQ;AAClD,QAAI,CAAC,KAAK,GAAG,SAAS,WAAW,WAAW,KAAK,IAAI;AACnD,mBAAa;AAAA;AAAA;AAAA,EAGjB,eAAe,uBAAuB,KAAK,QAAQ;AACjD,WAAO,OAAO,KAAK,QAAQ,cAAc,aAAa,KAAK,QAAQ,UAAU,KAAK,MAAM,KAAK,QAAQ,UAAU,KAAK,QAAQ;AAAA;AAAA,EAE9H,aAAa,qBAEb,KAAK;AACH,QAAI,CAAC,IAAI;AAAY;AAErB,QAAI,QAAQ,MACR,KAAK,KAAK,IACV,UAAU,KAAK,SACf,kBAAkB,QAAQ,iBAC1B,OAAO,IAAI,MACX,QAAQ,IAAI,WAAW,IAAI,QAAQ,MAAM,IAAI,eAAe,IAAI,gBAAgB,WAAW,KAC3F,SAAU,UAAS,KAAK,QACxB,iBAAiB,IAAI,OAAO,cAAe,KAAI,QAAQ,IAAI,KAAK,MAAM,IAAI,gBAAgB,IAAI,eAAe,OAAO,QACpH,SAAS,QAAQ;AAErB,2BAAuB;AAGvB,QAAI,QAAQ;AACV;AAAA;AAGF,QAAI,wBAAwB,KAAK,SAAS,IAAI,WAAW,KAAK,QAAQ,UAAU;AAC9E;AAAA;AAIF,QAAI,eAAe,mBAAmB;AACpC;AAAA;AAIF,QAAI,CAAC,KAAK,mBAAmB,UAAU,UAAU,OAAO,QAAQ,kBAAkB,UAAU;AAC1F;AAAA;AAGF,aAAS,QAAQ,QAAQ,QAAQ,WAAW,IAAI;AAEhD,QAAI,UAAU,OAAO,UAAU;AAC7B;AAAA;AAGF,QAAI,eAAe,QAAQ;AAEzB;AAAA;AAIF,eAAW,MAAM;AACjB,wBAAoB,MAAM,QAAQ,QAAQ;AAE1C,QAAI,OAAO,WAAW,YAAY;AAChC,UAAI,OAAO,KAAK,MAAM,KAAK,QAAQ,OAAO;AACxC,uBAAe;AAAA,UACb,UAAU;AAAA,UACV,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,UAAU;AAAA,UACV,MAAM;AAAA,UACN,QAAQ;AAAA;AAGV,qBAAY,UAAU,OAAO;AAAA,UAC3B;AAAA;AAEF,2BAAmB,IAAI,cAAc,IAAI;AACzC;AAAA;AAAA,eAEO,QAAQ;AACjB,eAAS,OAAO,MAAM,KAAK,KAAK,SAAU,UAAU;AAClD,mBAAW,QAAQ,gBAAgB,SAAS,QAAQ,IAAI;AAExD,YAAI,UAAU;AACZ,yBAAe;AAAA,YACb,UAAU;AAAA,YACV,QAAQ;AAAA,YACR,MAAM;AAAA,YACN,UAAU;AAAA,YACV,QAAQ;AAAA,YACR,MAAM;AAAA;AAGR,uBAAY,UAAU,OAAO;AAAA,YAC3B;AAAA;AAEF,iBAAO;AAAA;AAAA;AAIX,UAAI,QAAQ;AACV,2BAAmB,IAAI,cAAc,IAAI;AACzC;AAAA;AAAA;AAIJ,QAAI,QAAQ,UAAU,CAAC,QAAQ,gBAAgB,QAAQ,QAAQ,IAAI,QAAQ;AACzE;AAAA;AAIF,SAAK,kBAAkB,KAAK,OAAO;AAAA;AAAA,EAErC,mBAAmB,2BAEnB,KAEA,OAEA,QAAQ;AACN,QAAI,QAAQ,MACR,KAAK,MAAM,IACX,UAAU,MAAM,SAChB,gBAAgB,GAAG,eACnB;AAEJ,QAAI,UAAU,CAAC,UAAU,OAAO,eAAe,IAAI;AACjD,UAAI,WAAW,QAAQ;AACvB,eAAS;AACT,eAAS;AACT,iBAAW,OAAO;AAClB,eAAS,OAAO;AAChB,mBAAa;AACb,oBAAc,QAAQ;AACtB,eAAS,UAAU;AACnB,eAAS;AAAA,QACP,QAAQ;AAAA,QACR,SAAU,UAAS,KAAK;AAAA,QACxB,SAAU,UAAS,KAAK;AAAA;AAE1B,wBAAkB,OAAO,UAAU,SAAS;AAC5C,uBAAiB,OAAO,UAAU,SAAS;AAC3C,WAAK,SAAU,UAAS,KAAK;AAC7B,WAAK,SAAU,UAAS,KAAK;AAC7B,aAAO,MAAM,iBAAiB;AAE9B,oBAAc,wBAAuB;AACnC,qBAAY,cAAc,OAAO;AAAA,UAC/B;AAAA;AAGF,YAAI,SAAS,eAAe;AAC1B,gBAAM;AAEN;AAAA;AAKF,cAAM;AAEN,YAAI,CAAC,WAAW,MAAM,iBAAiB;AACrC,iBAAO,YAAY;AAAA;AAIrB,cAAM,kBAAkB,KAAK;AAG7B,uBAAe;AAAA,UACb,UAAU;AAAA,UACV,MAAM;AAAA,UACN,eAAe;AAAA;AAIjB,oBAAY,QAAQ,QAAQ,aAAa;AAAA;AAI3C,cAAQ,OAAO,MAAM,KAAK,QAAQ,SAAU,UAAU;AACpD,aAAK,QAAQ,SAAS,QAAQ;AAAA;AAEhC,SAAG,eAAe,YAAY;AAC9B,SAAG,eAAe,aAAa;AAC/B,SAAG,eAAe,aAAa;AAC/B,SAAG,eAAe,WAAW,MAAM;AACnC,SAAG,eAAe,YAAY,MAAM;AACpC,SAAG,eAAe,eAAe,MAAM;AAEvC,UAAI,WAAW,KAAK,iBAAiB;AACnC,aAAK,QAAQ,sBAAsB;AACnC,eAAO,YAAY;AAAA;AAGrB,mBAAY,cAAc,MAAM;AAAA,QAC9B;AAAA;AAGF,UAAI,QAAQ,SAAU,EAAC,QAAQ,oBAAoB,UAAW,EAAC,KAAK,mBAAmB,CAAE,SAAQ,cAAc;AAC7G,YAAI,SAAS,eAAe;AAC1B,eAAK;AAEL;AAAA;AAMF,WAAG,eAAe,WAAW,MAAM;AACnC,WAAG,eAAe,YAAY,MAAM;AACpC,WAAG,eAAe,eAAe,MAAM;AACvC,WAAG,eAAe,aAAa,MAAM;AACrC,WAAG,eAAe,aAAa,MAAM;AACrC,gBAAQ,kBAAkB,GAAG,eAAe,eAAe,MAAM;AACjE,cAAM,kBAAkB,WAAW,aAAa,QAAQ;AAAA,aACnD;AACL;AAAA;AAAA;AAAA;AAAA,EAIN,8BAA8B,sCAE9B,GAAG;AACD,QAAI,QAAQ,EAAE,UAAU,EAAE,QAAQ,KAAK;AAEvC,QAAI,KAAK,IAAI,KAAK,IAAI,MAAM,UAAU,KAAK,SAAS,KAAK,IAAI,MAAM,UAAU,KAAK,YAAY,KAAK,MAAM,KAAK,QAAQ,sBAAuB,MAAK,mBAAmB,OAAO,oBAAoB,KAAK;AACnM,WAAK;AAAA;AAAA;AAAA,EAGT,qBAAqB,+BAA+B;AAClD,cAAU,kBAAkB;AAC5B,iBAAa,KAAK;AAElB,SAAK;AAAA;AAAA,EAEP,2BAA2B,qCAAqC;AAC9D,QAAI,gBAAgB,KAAK,GAAG;AAC5B,QAAI,eAAe,WAAW,KAAK;AACnC,QAAI,eAAe,YAAY,KAAK;AACpC,QAAI,eAAe,eAAe,KAAK;AACvC,QAAI,eAAe,aAAa,KAAK;AACrC,QAAI,eAAe,aAAa,KAAK;AACrC,QAAI,eAAe,eAAe,KAAK;AAAA;AAAA,EAEzC,mBAAmB,2BAEnB,KAEA,OAAO;AACL,YAAQ,SAAS,IAAI,eAAe,WAAW;AAE/C,QAAI,CAAC,KAAK,mBAAmB,OAAO;AAClC,UAAI,KAAK,QAAQ,gBAAgB;AAC/B,WAAG,UAAU,eAAe,KAAK;AAAA,iBACxB,OAAO;AAChB,WAAG,UAAU,aAAa,KAAK;AAAA,aAC1B;AACL,WAAG,UAAU,aAAa,KAAK;AAAA;AAAA,WAE5B;AACL,SAAG,QAAQ,WAAW;AACtB,SAAG,QAAQ,aAAa,KAAK;AAAA;AAG/B,QAAI;AACF,UAAI,SAAS,WAAW;AAEtB,kBAAU,WAAY;AACpB,mBAAS,UAAU;AAAA;AAAA,aAEhB;AACL,eAAO,eAAe;AAAA;AAAA,aAEjB,KAAP;AAAA;AAAA;AAAA,EAEJ,cAAc,sBAAsB,UAAU,KAAK;AAEjD,0BAAsB;AAEtB,QAAI,UAAU,QAAQ;AACpB,mBAAY,eAAe,MAAM;AAAA,QAC/B;AAAA;AAGF,UAAI,KAAK,iBAAiB;AACxB,WAAG,UAAU,YAAY;AAAA;AAG3B,UAAI,UAAU,KAAK;AAEnB,OAAC,YAAY,YAAY,QAAQ,QAAQ,WAAW;AACpD,kBAAY,QAAQ,QAAQ,YAAY;AACxC,eAAS,SAAS;AAClB,kBAAY,KAAK;AAEjB,qBAAe;AAAA,QACb,UAAU;AAAA,QACV,MAAM;AAAA,QACN,eAAe;AAAA;AAAA,WAEZ;AACL,WAAK;AAAA;AAAA;AAAA,EAGT,kBAAkB,4BAA4B;AAC5C,QAAI,UAAU;AACZ,WAAK,SAAS,SAAS;AACvB,WAAK,SAAS,SAAS;AAEvB;AAEA,UAAI,SAAS,SAAS,iBAAiB,SAAS,SAAS,SAAS;AAClE,UAAI,SAAS;AAEb,aAAO,UAAU,OAAO,YAAY;AAClC,iBAAS,OAAO,WAAW,iBAAiB,SAAS,SAAS,SAAS;AACvE,YAAI,WAAW;AAAQ;AACvB,iBAAS;AAAA;AAGX,aAAO,WAAW,SAAS,iBAAiB;AAE5C,UAAI,QAAQ;AACV,WAAG;AACD,cAAI,OAAO,UAAU;AACnB,gBAAI,WAAW;AACf,uBAAW,OAAO,SAAS,YAAY;AAAA,cACrC,SAAS,SAAS;AAAA,cAClB,SAAS,SAAS;AAAA,cAClB;AAAA,cACA,QAAQ;AAAA;AAGV,gBAAI,YAAY,CAAC,KAAK,QAAQ,gBAAgB;AAC5C;AAAA;AAAA;AAIJ,mBAAS;AAAA,iBAGJ,SAAS,OAAO;AAAA;AAGzB;AAAA;AAAA;AAAA,EAGJ,cAAc,sBAEd,KAAK;AACH,QAAI,QAAQ;AACV,UAAI,UAAU,KAAK,SACf,oBAAoB,QAAQ,mBAC5B,iBAAiB,QAAQ,gBACzB,QAAQ,IAAI,UAAU,IAAI,QAAQ,KAAK,KACvC,cAAc,WAAW,OAAO,SAAS,OACzC,SAAS,WAAW,eAAe,YAAY,GAC/C,SAAS,WAAW,eAAe,YAAY,GAC/C,uBAAuB,2BAA2B,uBAAuB,wBAAwB,sBACjG,KAAM,OAAM,UAAU,OAAO,UAAU,eAAe,KAAM,WAAU,KAAM,wBAAuB,qBAAqB,KAAK,iCAAiC,KAAK,KAAM,WAAU,IACnL,KAAM,OAAM,UAAU,OAAO,UAAU,eAAe,KAAM,WAAU,KAAM,wBAAuB,qBAAqB,KAAK,iCAAiC,KAAK,KAAM,WAAU;AAEvL,UAAI,CAAC,SAAS,UAAU,CAAC,qBAAqB;AAC5C,YAAI,qBAAqB,KAAK,IAAI,KAAK,IAAI,MAAM,UAAU,KAAK,SAAS,KAAK,IAAI,MAAM,UAAU,KAAK,WAAW,mBAAmB;AACnI;AAAA;AAGF,aAAK,aAAa,KAAK;AAAA;AAGzB,UAAI,SAAS;AACX,YAAI,aAAa;AACf,sBAAY,KAAK,KAAM,WAAU;AACjC,sBAAY,KAAK,KAAM,WAAU;AAAA,eAC5B;AACL,wBAAc;AAAA,YACZ,GAAG;AAAA,YACH,GAAG;AAAA,YACH,GAAG;AAAA,YACH,GAAG;AAAA,YACH,GAAG;AAAA,YACH,GAAG;AAAA;AAAA;AAIP,YAAI,YAAY,UAAU,OAAO,YAAY,GAAG,KAAK,OAAO,YAAY,GAAG,KAAK,OAAO,YAAY,GAAG,KAAK,OAAO,YAAY,GAAG,KAAK,OAAO,YAAY,GAAG,KAAK,OAAO,YAAY,GAAG;AACvL,YAAI,SAAS,mBAAmB;AAChC,YAAI,SAAS,gBAAgB;AAC7B,YAAI,SAAS,eAAe;AAC5B,YAAI,SAAS,aAAa;AAC1B,iBAAS;AACT,iBAAS;AACT,mBAAW;AAAA;AAGb,UAAI,cAAc,IAAI;AAAA;AAAA;AAAA,EAG1B,cAAc,wBAAwB;AAGpC,QAAI,CAAC,SAAS;AACZ,UAAI,YAAY,KAAK,QAAQ,iBAAiB,SAAS,OAAO,QAC1D,OAAO,QAAQ,QAAQ,MAAM,yBAAyB,MAAM,YAC5D,UAAU,KAAK;AAEnB,UAAI,yBAAyB;AAE3B,8BAAsB;AAEtB,eAAO,IAAI,qBAAqB,gBAAgB,YAAY,IAAI,qBAAqB,iBAAiB,UAAU,wBAAwB,UAAU;AAChJ,gCAAsB,oBAAoB;AAAA;AAG5C,YAAI,wBAAwB,SAAS,QAAQ,wBAAwB,SAAS,iBAAiB;AAC7F,cAAI,wBAAwB;AAAU,kCAAsB;AAC5D,eAAK,OAAO,oBAAoB;AAChC,eAAK,QAAQ,oBAAoB;AAAA,eAC5B;AACL,gCAAsB;AAAA;AAGxB,2CAAmC,wBAAwB;AAAA;AAG7D,gBAAU,OAAO,UAAU;AAC3B,kBAAY,SAAS,QAAQ,YAAY;AACzC,kBAAY,SAAS,QAAQ,eAAe;AAC5C,kBAAY,SAAS,QAAQ,WAAW;AACxC,UAAI,SAAS,cAAc;AAC3B,UAAI,SAAS,aAAa;AAC1B,UAAI,SAAS,cAAc;AAC3B,UAAI,SAAS,UAAU;AACvB,UAAI,SAAS,OAAO,KAAK;AACzB,UAAI,SAAS,QAAQ,KAAK;AAC1B,UAAI,SAAS,SAAS,KAAK;AAC3B,UAAI,SAAS,UAAU,KAAK;AAC5B,UAAI,SAAS,WAAW;AACxB,UAAI,SAAS,YAAY,0BAA0B,aAAa;AAChE,UAAI,SAAS,UAAU;AACvB,UAAI,SAAS,iBAAiB;AAC9B,eAAS,QAAQ;AACjB,gBAAU,YAAY;AAEtB,UAAI,SAAS,oBAAoB,kBAAkB,SAAS,QAAQ,MAAM,SAAS,MAAM,OAAO,iBAAiB,SAAS,QAAQ,MAAM,UAAU,MAAM;AAAA;AAAA;AAAA,EAG5J,cAAc,sBAEd,KAEA,UAAU;AACR,QAAI,QAAQ;AAEZ,QAAI,eAAe,IAAI;AACvB,QAAI,UAAU,MAAM;AACpB,iBAAY,aAAa,MAAM;AAAA,MAC7B;AAAA;AAGF,QAAI,SAAS,eAAe;AAC1B,WAAK;AAEL;AAAA;AAGF,iBAAY,cAAc;AAE1B,QAAI,CAAC,SAAS,eAAe;AAC3B,gBAAU,MAAM;AAChB,cAAQ,YAAY;AACpB,cAAQ,MAAM,iBAAiB;AAE/B,WAAK;AAEL,kBAAY,SAAS,KAAK,QAAQ,aAAa;AAC/C,eAAS,QAAQ;AAAA;AAInB,UAAM,UAAU,UAAU,WAAY;AACpC,mBAAY,SAAS;AACrB,UAAI,SAAS;AAAe;AAE5B,UAAI,CAAC,MAAM,QAAQ,mBAAmB;AACpC,eAAO,aAAa,SAAS;AAAA;AAG/B,YAAM;AAEN,qBAAe;AAAA,QACb,UAAU;AAAA,QACV,MAAM;AAAA;AAAA;AAGV,KAAC,YAAY,YAAY,QAAQ,QAAQ,WAAW;AAEpD,QAAI,UAAU;AACZ,wBAAkB;AAClB,YAAM,UAAU,YAAY,MAAM,kBAAkB;AAAA,WAC/C;AAEL,UAAI,UAAU,WAAW,MAAM;AAC/B,UAAI,UAAU,YAAY,MAAM;AAChC,UAAI,UAAU,eAAe,MAAM;AAEnC,UAAI,cAAc;AAChB,qBAAa,gBAAgB;AAC7B,gBAAQ,WAAW,QAAQ,QAAQ,KAAK,OAAO,cAAc;AAAA;AAG/D,SAAG,UAAU,QAAQ;AAErB,UAAI,QAAQ,aAAa;AAAA;AAG3B,0BAAsB;AACtB,UAAM,eAAe,UAAU,MAAM,aAAa,KAAK,OAAO,UAAU;AACxE,OAAG,UAAU,eAAe;AAC5B,YAAQ;AAER,QAAI,QAAQ;AACV,UAAI,SAAS,MAAM,eAAe;AAAA;AAAA;AAAA,EAItC,aAAa,qBAEb,KAAK;AACH,QAAI,KAAK,KAAK,IACV,SAAS,IAAI,QACb,UACA,YACA,QACA,UAAU,KAAK,SACf,QAAQ,QAAQ,OAChB,iBAAiB,SAAS,QAC1B,UAAU,gBAAgB,OAC1B,UAAU,QAAQ,MAClB,eAAe,eAAe,gBAC9B,UACA,QAAQ,MACR,iBAAiB;AAErB,QAAI;AAAS;AAEb,2BAAuB,MAAM,OAAO;AAClC,mBAAY,MAAM,OAAO,eAAe;AAAA,QACtC;AAAA,QACA;AAAA,QACA,MAAM,WAAW,aAAa;AAAA,QAC9B;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ,gBAAgB,SAAQ,QAAO;AACrC,iBAAO,QAAQ,QAAQ,IAAI,QAAQ,UAAU,SAAQ,QAAQ,UAAS,KAAK;AAAA;AAAA,QAE7E;AAAA,SACC;AAAA;AAIL,uBAAmB;AACjB,oBAAc;AAEd,YAAM;AAEN,UAAI,UAAU,cAAc;AAC1B,qBAAa;AAAA;AAAA;AAKjB,uBAAmB,WAAW;AAC5B,oBAAc,qBAAqB;AAAA,QACjC;AAAA;AAGF,UAAI,WAAW;AAEb,YAAI,SAAS;AACX,yBAAe;AAAA,eACV;AACL,yBAAe,WAAW;AAAA;AAG5B,YAAI,UAAU,cAAc;AAE1B,sBAAY,QAAQ,cAAc,YAAY,QAAQ,aAAa,eAAe,QAAQ,YAAY;AACtG,sBAAY,QAAQ,QAAQ,YAAY;AAAA;AAG1C,YAAI,gBAAgB,SAAS,UAAU,SAAS,QAAQ;AACtD,wBAAc;AAAA,mBACL,UAAU,SAAS,UAAU,aAAa;AACnD,wBAAc;AAAA;AAIhB,YAAI,iBAAiB,OAAO;AAC1B,gBAAM,wBAAwB;AAAA;AAGhC,cAAM,WAAW,WAAY;AAC3B,wBAAc;AACd,gBAAM,wBAAwB;AAAA;AAGhC,YAAI,UAAU,cAAc;AAC1B,uBAAa;AACb,uBAAa,wBAAwB;AAAA;AAAA;AAKzC,UAAI,WAAW,UAAU,CAAC,OAAO,YAAY,WAAW,MAAM,CAAC,OAAO,UAAU;AAC9E,qBAAa;AAAA;AAIf,UAAI,CAAC,QAAQ,kBAAkB,CAAC,IAAI,UAAU,WAAW,UAAU;AACjE,eAAO,WAAW,SAAS,iBAAiB,IAAI;AAGhD,SAAC,aAAa,8BAA8B;AAAA;AAG9C,OAAC,QAAQ,kBAAkB,IAAI,mBAAmB,IAAI;AACtD,aAAO,iBAAiB;AAAA;AAI1B,uBAAmB;AACjB,iBAAW,MAAM;AACjB,0BAAoB,MAAM,QAAQ,QAAQ;AAE1C,qBAAe;AAAA,QACb,UAAU;AAAA,QACV,MAAM;AAAA,QACN,MAAM;AAAA,QACN;AAAA,QACA;AAAA,QACA,eAAe;AAAA;AAAA;AAInB,QAAI,IAAI,mBAAmB,QAAQ;AACjC,UAAI,cAAc,IAAI;AAAA;AAGxB,aAAS,QAAQ,QAAQ,QAAQ,WAAW,IAAI;AAChD,kBAAc;AACd,QAAI,SAAS;AAAe,aAAO;AAEnC,QAAI,OAAO,SAAS,IAAI,WAAW,OAAO,YAAY,OAAO,cAAc,OAAO,cAAc,MAAM,0BAA0B,QAAQ;AACtI,aAAO,UAAU;AAAA;AAGnB,sBAAkB;AAElB,QAAI,kBAAkB,CAAC,QAAQ,YAAa,WAAU,WAAY,UAAS,aAAa,UACtF,gBAAgB,QAAS,MAAK,cAAc,YAAY,UAAU,MAAM,gBAAgB,QAAQ,SAAS,MAAM,SAAS,MAAM,gBAAgB,QAAQ,OAAO;AAC7J,iBAAW,KAAK,cAAc,KAAK,YAAY;AAC/C,iBAAW,QAAQ;AACnB,oBAAc;AACd,UAAI,SAAS;AAAe,eAAO;AAEnC,UAAI,QAAQ;AACV,mBAAW;AAEX;AAEA,aAAK;AAEL,sBAAc;AAEd,YAAI,CAAC,SAAS,eAAe;AAC3B,cAAI,QAAQ;AACV,mBAAO,aAAa,QAAQ;AAAA,iBACvB;AACL,mBAAO,YAAY;AAAA;AAAA;AAIvB,eAAO,UAAU;AAAA;AAGnB,UAAI,cAAc,UAAU,IAAI,QAAQ;AAExC,UAAI,CAAC,eAAe,aAAa,KAAK,UAAU,SAAS,CAAC,YAAY,UAAU;AAG9E,YAAI,gBAAgB,QAAQ;AAC1B,iBAAO,UAAU;AAAA;AAInB,YAAI,eAAe,OAAO,IAAI,QAAQ;AACpC,mBAAS;AAAA;AAGX,YAAI,QAAQ;AACV,uBAAa,QAAQ;AAAA;AAGvB,YAAI,QAAQ,QAAQ,IAAI,QAAQ,UAAU,QAAQ,YAAY,KAAK,CAAC,CAAC,YAAY,OAAO;AACtF;AACA,aAAG,YAAY;AACf,qBAAW;AAEX;AACA,iBAAO,UAAU;AAAA;AAAA,iBAEV,eAAe,cAAc,KAAK,UAAU,OAAO;AAE5D,YAAI,aAAa,SAAS,IAAI,GAAG,SAAS;AAE1C,YAAI,eAAe,QAAQ;AACzB,iBAAO,UAAU;AAAA;AAGnB,iBAAS;AACT,qBAAa,QAAQ;AAErB,YAAI,QAAQ,QAAQ,IAAI,QAAQ,UAAU,QAAQ,YAAY,KAAK,WAAW,OAAO;AACnF;AACA,aAAG,aAAa,QAAQ;AACxB,qBAAW;AAEX;AACA,iBAAO,UAAU;AAAA;AAAA,iBAEV,OAAO,eAAe,IAAI;AACnC,qBAAa,QAAQ;AACrB,YAAI,YAAY,GACZ,uBACA,iBAAiB,OAAO,eAAe,IACvC,kBAAkB,CAAC,mBAAmB,OAAO,YAAY,OAAO,UAAU,UAAU,OAAO,YAAY,OAAO,UAAU,YAAY,WACpI,QAAQ,WAAW,QAAQ,QAC3B,kBAAkB,eAAe,QAAQ,OAAO,UAAU,eAAe,QAAQ,OAAO,QACxF,eAAe,kBAAkB,gBAAgB,YAAY;AAEjE,YAAI,eAAe,QAAQ;AACzB,kCAAwB,WAAW;AACnC,kCAAwB;AACxB,mCAAyB,CAAC,mBAAmB,QAAQ,cAAc;AAAA;AAGrE,oBAAY,kBAAkB,KAAK,QAAQ,YAAY,UAAU,kBAAkB,IAAI,QAAQ,eAAe,QAAQ,yBAAyB,OAAO,QAAQ,gBAAgB,QAAQ,uBAAuB,wBAAwB,eAAe;AACpP,YAAI;AAEJ,YAAI,cAAc,GAAG;AAEnB,cAAI,YAAY,MAAM;AAEtB,aAAG;AACD,yBAAa;AACb,sBAAU,SAAS,SAAS;AAAA,mBACrB,WAAY,KAAI,SAAS,eAAe,UAAU,YAAY;AAAA;AAIzE,YAAI,cAAc,KAAK,YAAY,QAAQ;AACzC,iBAAO,UAAU;AAAA;AAGnB,qBAAa;AACb,wBAAgB;AAChB,YAAI,cAAc,OAAO,oBACrB,QAAQ;AACZ,gBAAQ,cAAc;AAEtB,YAAI,aAAa,QAAQ,QAAQ,IAAI,QAAQ,UAAU,QAAQ,YAAY,KAAK;AAEhF,YAAI,eAAe,OAAO;AACxB,cAAI,eAAe,KAAK,eAAe,IAAI;AACzC,oBAAQ,eAAe;AAAA;AAGzB,oBAAU;AACV,qBAAW,WAAW;AACtB;AAEA,cAAI,SAAS,CAAC,aAAa;AACzB,eAAG,YAAY;AAAA,iBACV;AACL,mBAAO,WAAW,aAAa,QAAQ,QAAQ,cAAc;AAAA;AAI/D,cAAI,iBAAiB;AACnB,qBAAS,iBAAiB,GAAG,eAAe,gBAAgB;AAAA;AAG9D,qBAAW,OAAO;AAGlB,cAAI,0BAA0B,UAAa,CAAC,wBAAwB;AAClE,iCAAqB,KAAK,IAAI,wBAAwB,QAAQ,QAAQ;AAAA;AAGxE;AACA,iBAAO,UAAU;AAAA;AAAA;AAIrB,UAAI,GAAG,SAAS,SAAS;AACvB,eAAO,UAAU;AAAA;AAAA;AAIrB,WAAO;AAAA;AAAA,EAET,uBAAuB;AAAA,EACvB,gBAAgB,0BAA0B;AACxC,QAAI,UAAU,aAAa,KAAK;AAChC,QAAI,UAAU,aAAa,KAAK;AAChC,QAAI,UAAU,eAAe,KAAK;AAClC,QAAI,UAAU,YAAY;AAC1B,QAAI,UAAU,aAAa;AAC3B,QAAI,UAAU,aAAa;AAAA;AAAA,EAE7B,cAAc,wBAAwB;AACpC,QAAI,gBAAgB,KAAK,GAAG;AAC5B,QAAI,eAAe,WAAW,KAAK;AACnC,QAAI,eAAe,YAAY,KAAK;AACpC,QAAI,eAAe,aAAa,KAAK;AACrC,QAAI,eAAe,eAAe,KAAK;AACvC,QAAI,UAAU,eAAe;AAAA;AAAA,EAE/B,SAAS,iBAET,KAAK;AACH,QAAI,KAAK,KAAK,IACV,UAAU,KAAK;AAEnB,eAAW,MAAM;AACjB,wBAAoB,MAAM,QAAQ,QAAQ;AAC1C,iBAAY,QAAQ,MAAM;AAAA,MACxB;AAAA;AAEF,eAAW,UAAU,OAAO;AAE5B,eAAW,MAAM;AACjB,wBAAoB,MAAM,QAAQ,QAAQ;AAE1C,QAAI,SAAS,eAAe;AAC1B,WAAK;AAEL;AAAA;AAGF,0BAAsB;AACtB,6BAAyB;AACzB,4BAAwB;AACxB,kBAAc,KAAK;AACnB,iBAAa,KAAK;AAElB,oBAAgB,KAAK;AAErB,oBAAgB,KAAK;AAGrB,QAAI,KAAK,iBAAiB;AACxB,UAAI,UAAU,QAAQ;AACtB,UAAI,IAAI,aAAa,KAAK;AAAA;AAG5B,SAAK;AAEL,SAAK;AAEL,QAAI,QAAQ;AACV,UAAI,SAAS,MAAM,eAAe;AAAA;AAGpC,QAAI,QAAQ,aAAa;AAEzB,QAAI,KAAK;AACP,UAAI,OAAO;AACT,YAAI,cAAc,IAAI;AACtB,SAAC,QAAQ,cAAc,IAAI;AAAA;AAG7B,iBAAW,QAAQ,cAAc,QAAQ,WAAW,YAAY;AAEhE,UAAI,WAAW,YAAY,eAAe,YAAY,gBAAgB,SAAS;AAE7E,mBAAW,QAAQ,cAAc,QAAQ,WAAW,YAAY;AAAA;AAGlE,UAAI,QAAQ;AACV,YAAI,KAAK,iBAAiB;AACxB,cAAI,QAAQ,WAAW;AAAA;AAGzB,0BAAkB;AAElB,eAAO,MAAM,iBAAiB;AAG9B,YAAI,SAAS,CAAC,qBAAqB;AACjC,sBAAY,QAAQ,cAAc,YAAY,QAAQ,aAAa,KAAK,QAAQ,YAAY;AAAA;AAG9F,oBAAY,QAAQ,KAAK,QAAQ,aAAa;AAE9C,uBAAe;AAAA,UACb,UAAU;AAAA,UACV,MAAM;AAAA,UACN,MAAM;AAAA,UACN,UAAU;AAAA,UACV,mBAAmB;AAAA,UACnB,eAAe;AAAA;AAGjB,YAAI,WAAW,UAAU;AACvB,cAAI,YAAY,GAAG;AAEjB,2BAAe;AAAA,cACb,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,eAAe;AAAA;AAIjB,2BAAe;AAAA,cACb,UAAU;AAAA,cACV,MAAM;AAAA,cACN,MAAM;AAAA,cACN,eAAe;AAAA;AAIjB,2BAAe;AAAA,cACb,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,eAAe;AAAA;AAGjB,2BAAe;AAAA,cACb,UAAU;AAAA,cACV,MAAM;AAAA,cACN,MAAM;AAAA,cACN,eAAe;AAAA;AAAA;AAInB,yBAAe,YAAY;AAAA,eACtB;AACL,cAAI,aAAa,UAAU;AACzB,gBAAI,YAAY,GAAG;AAEjB,6BAAe;AAAA,gBACb,UAAU;AAAA,gBACV,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,eAAe;AAAA;AAGjB,6BAAe;AAAA,gBACb,UAAU;AAAA,gBACV,MAAM;AAAA,gBACN,MAAM;AAAA,gBACN,eAAe;AAAA;AAAA;AAAA;AAAA;AAMvB,YAAI,SAAS,QAAQ;AAEnB,cAAI,YAAY,QAAQ,aAAa,IAAI;AACvC,uBAAW;AACX,gCAAoB;AAAA;AAGtB,yBAAe;AAAA,YACb,UAAU;AAAA,YACV,MAAM;AAAA,YACN,MAAM;AAAA,YACN,eAAe;AAAA;AAIjB,eAAK;AAAA;AAAA;AAAA;AAKX,SAAK;AAAA;AAAA,EAEP,UAAU,oBAAoB;AAC5B,iBAAY,WAAW;AACvB,aAAS,SAAS,WAAW,UAAU,SAAS,UAAU,aAAa,cAAc,SAAS,WAAW,QAAQ,WAAW,oBAAoB,WAAW,oBAAoB,aAAa,gBAAgB,cAAc,cAAc,SAAS,UAAU,SAAS,QAAQ,SAAS,QAAQ,SAAS,SAAS;AAC/S,sBAAkB,QAAQ,SAAU,IAAI;AACtC,SAAG,UAAU;AAAA;AAEf,sBAAkB,SAAS,SAAS,SAAS;AAAA;AAAA,EAE/C,aAAa,qBAEb,KAAK;AACH,YAAQ,IAAI;AAAA,WACL;AAAA,WACA;AACH,aAAK,QAAQ;AAEb;AAAA,WAEG;AAAA,WACA;AACH,YAAI,QAAQ;AACV,eAAK,YAAY;AAEjB,0BAAgB;AAAA;AAGlB;AAAA,WAEG;AACH,YAAI;AACJ;AAAA;AAAA;AAAA,EAQN,SAAS,mBAAmB;AAC1B,QAAI,QAAQ,IACR,IACA,WAAW,KAAK,GAAG,UACnB,IAAI,GACJ,IAAI,SAAS,QACb,UAAU,KAAK;AAEnB,WAAO,IAAI,GAAG,KAAK;AACjB,WAAK,SAAS;AAEd,UAAI,QAAQ,IAAI,QAAQ,WAAW,KAAK,IAAI,QAAQ;AAClD,cAAM,KAAK,GAAG,aAAa,QAAQ,eAAe,YAAY;AAAA;AAAA;AAIlE,WAAO;AAAA;AAAA,EAOT,MAAM,cAAc,OAAO,cAAc;AACvC,QAAI,QAAQ,IACR,UAAS,KAAK;AAClB,SAAK,UAAU,QAAQ,SAAU,IAAI,GAAG;AACtC,UAAI,KAAK,QAAO,SAAS;AAEzB,UAAI,QAAQ,IAAI,KAAK,QAAQ,WAAW,SAAQ,QAAQ;AACtD,cAAM,MAAM;AAAA;AAAA,OAEb;AACH,oBAAgB,KAAK;AACrB,UAAM,QAAQ,SAAU,IAAI;AAC1B,UAAI,MAAM,KAAK;AACb,gBAAO,YAAY,MAAM;AACzB,gBAAO,YAAY,MAAM;AAAA;AAAA;AAG7B,oBAAgB,KAAK;AAAA;AAAA,EAMvB,MAAM,gBAAgB;AACpB,QAAI,QAAQ,KAAK,QAAQ;AACzB,aAAS,MAAM,OAAO,MAAM,IAAI;AAAA;AAAA,EASlC,SAAS,mBAAmB,IAAI,UAAU;AACxC,WAAO,QAAQ,IAAI,YAAY,KAAK,QAAQ,WAAW,KAAK,IAAI;AAAA;AAAA,EASlE,QAAQ,gBAAgB,MAAM,OAAO;AACnC,QAAI,UAAU,KAAK;AAEnB,QAAI,UAAU,QAAQ;AACpB,aAAO,QAAQ;AAAA,WACV;AACL,UAAI,gBAAgB,cAAc,aAAa,MAAM,MAAM;AAE3D,UAAI,OAAO,kBAAkB,aAAa;AACxC,gBAAQ,QAAQ;AAAA,aACX;AACL,gBAAQ,QAAQ;AAAA;AAGlB,UAAI,SAAS,SAAS;AACpB,sBAAc;AAAA;AAAA;AAAA;AAAA,EAQpB,SAAS,mBAAmB;AAC1B,iBAAY,WAAW;AACvB,QAAI,KAAK,KAAK;AACd,OAAG,WAAW;AACd,QAAI,IAAI,aAAa,KAAK;AAC1B,QAAI,IAAI,cAAc,KAAK;AAC3B,QAAI,IAAI,eAAe,KAAK;AAE5B,QAAI,KAAK,iBAAiB;AACxB,UAAI,IAAI,YAAY;AACpB,UAAI,IAAI,aAAa;AAAA;AAIvB,UAAM,UAAU,QAAQ,KAAK,GAAG,iBAAiB,gBAAgB,SAAU,KAAI;AAC7E,UAAG,gBAAgB;AAAA;AAGrB,SAAK;AAEL,SAAK;AAEL,cAAU,OAAO,UAAU,QAAQ,KAAK,KAAK;AAC7C,SAAK,KAAK,KAAK;AAAA;AAAA,EAEjB,YAAY,sBAAsB;AAChC,QAAI,CAAC,aAAa;AAChB,mBAAY,aAAa;AACzB,UAAI,SAAS;AAAe;AAC5B,UAAI,SAAS,WAAW;AAExB,UAAI,KAAK,QAAQ,qBAAqB,QAAQ,YAAY;AACxD,gBAAQ,WAAW,YAAY;AAAA;AAGjC,oBAAc;AAAA;AAAA;AAAA,EAGlB,YAAY,oBAAoB,cAAa;AAC3C,QAAI,aAAY,gBAAgB,SAAS;AACvC,WAAK;AAEL;AAAA;AAGF,QAAI,aAAa;AACf,mBAAY,aAAa;AACzB,UAAI,SAAS;AAAe;AAE5B,UAAI,OAAO,cAAc,UAAU,CAAC,KAAK,QAAQ,MAAM,aAAa;AAClE,eAAO,aAAa,SAAS;AAAA,iBACpB,QAAQ;AACjB,eAAO,aAAa,SAAS;AAAA,aACxB;AACL,eAAO,YAAY;AAAA;AAGrB,UAAI,KAAK,QAAQ,MAAM,aAAa;AAClC,aAAK,QAAQ,QAAQ;AAAA;AAGvB,UAAI,SAAS,WAAW;AACxB,oBAAc;AAAA;AAAA;AAAA;AAKpB,yBAEA,KAAK;AACH,MAAI,IAAI,cAAc;AACpB,QAAI,aAAa,aAAa;AAAA;AAGhC,MAAI,cAAc,IAAI;AAAA;AAGxB,iBAAiB,QAAQ,MAAM,SAAQ,UAAU,UAAU,YAAY,eAAe,iBAAiB;AACrG,MAAI,KACA,WAAW,OAAO,UAClB,WAAW,SAAS,QAAQ,QAC5B;AAEJ,MAAI,OAAO,eAAe,CAAC,cAAc,CAAC,MAAM;AAC9C,UAAM,IAAI,YAAY,QAAQ;AAAA,MAC5B,SAAS;AAAA,MACT,YAAY;AAAA;AAAA,SAET;AACL,UAAM,SAAS,YAAY;AAC3B,QAAI,UAAU,QAAQ,MAAM;AAAA;AAG9B,MAAI,KAAK;AACT,MAAI,OAAO;AACX,MAAI,UAAU;AACd,MAAI,cAAc;AAClB,MAAI,UAAU,YAAY;AAC1B,MAAI,cAAc,cAAc,QAAQ;AACxC,MAAI,kBAAkB;AACtB,MAAI,gBAAgB;AACpB,SAAO,cAAc;AAErB,MAAI,UAAU;AACZ,aAAS,SAAS,KAAK,UAAU,KAAK;AAAA;AAGxC,SAAO;AAAA;AAGT,2BAA2B,IAAI;AAC7B,KAAG,YAAY;AAAA;AAGjB,qBAAqB;AACnB,YAAU;AAAA;AAGZ,uBAAuB,KAAK,UAAU,UAAU;AAC9C,MAAI,OAAO,QAAQ,SAAS,SAAS,IAAI,GAAG,SAAS,SAAS;AAC9D,MAAI,SAAS;AACb,SAAO,WAAW,IAAI,UAAU,KAAK,OAAO,UAAU,IAAI,UAAU,KAAK,OAAO,IAAI,UAAU,KAAK,QAAQ,IAAI,UAAU,KAAK,MAAM,UAAU,IAAI,UAAU,KAAK,UAAU,IAAI,UAAU,KAAK;AAAA;AAGhM,sBAAsB,KAAK,UAAU,UAAU;AAC7C,MAAI,OAAO,QAAQ,UAAU,SAAS,IAAI,SAAS,QAAQ;AAC3D,MAAI,SAAS;AACb,SAAO,WAAW,IAAI,UAAU,KAAK,QAAQ,UAAU,IAAI,WAAW,KAAK,SAAS,IAAI,UAAU,KAAK,UAAU,IAAI,WAAW,KAAK,OAAO,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,OAAO,IAAI,WAAW,KAAK,SAAS,IAAI,UAAU,KAAK,SAAS;AAAA;AAG7P,2BAA2B,KAAK,QAAQ,YAAY,UAAU,eAAe,uBAAuB,YAAY,cAAc;AAC5H,MAAI,cAAc,WAAW,IAAI,UAAU,IAAI,SAC3C,eAAe,WAAW,WAAW,SAAS,WAAW,OACzD,WAAW,WAAW,WAAW,MAAM,WAAW,MAClD,WAAW,WAAW,WAAW,SAAS,WAAW,OACrD,SAAS;AAEb,MAAI,CAAC,YAAY;AAEf,QAAI,gBAAgB,qBAAqB,eAAe,eAAe;AAGrE,UAAI,CAAC,yBAA0B,mBAAkB,IAAI,cAAc,WAAW,eAAe,wBAAwB,IAAI,cAAc,WAAW,eAAe,wBAAwB,IAAI;AAE3L,gCAAwB;AAAA;AAG1B,UAAI,CAAC,uBAAuB;AAE1B,YAAI,kBAAkB,IAAI,cAAc,WAAW,qBACjD,cAAc,WAAW,oBAAoB;AAC7C,iBAAO,CAAC;AAAA;AAAA,aAEL;AACL,iBAAS;AAAA;AAAA,WAEN;AAEL,UAAI,cAAc,WAAW,eAAgB,KAAI,iBAAiB,KAAK,cAAc,WAAW,eAAgB,KAAI,iBAAiB,GAAG;AACtI,eAAO,oBAAoB;AAAA;AAAA;AAAA;AAKjC,WAAS,UAAU;AAEnB,MAAI,QAAQ;AAEV,QAAI,cAAc,WAAW,eAAe,wBAAwB,KAAK,cAAc,WAAW,eAAe,wBAAwB,GAAG;AAC1I,aAAO,cAAc,WAAW,eAAe,IAAI,IAAI;AAAA;AAAA;AAI3D,SAAO;AAAA;AAUT,6BAA6B,QAAQ;AACnC,MAAI,MAAM,UAAU,MAAM,SAAS;AACjC,WAAO;AAAA,SACF;AACL,WAAO;AAAA;AAAA;AAWX,qBAAqB,IAAI;AACvB,MAAI,MAAM,GAAG,UAAU,GAAG,YAAY,GAAG,MAAM,GAAG,OAAO,GAAG,aACxD,IAAI,IAAI,QACR,MAAM;AAEV,SAAO,KAAK;AACV,WAAO,IAAI,WAAW;AAAA;AAGxB,SAAO,IAAI,SAAS;AAAA;AAGtB,gCAAgC,MAAM;AACpC,oBAAkB,SAAS;AAC3B,MAAI,SAAS,KAAK,qBAAqB;AACvC,MAAI,MAAM,OAAO;AAEjB,SAAO,OAAO;AACZ,QAAI,KAAK,OAAO;AAChB,OAAG,WAAW,kBAAkB,KAAK;AAAA;AAAA;AAIzC,mBAAmB,IAAI;AACrB,SAAO,WAAW,IAAI;AAAA;AAGxB,yBAAyB,IAAI;AAC3B,SAAO,aAAa;AAAA;AAItB,IAAI,gBAAgB;AAClB,KAAG,UAAU,aAAa,SAAU,KAAK;AACvC,QAAK,UAAS,UAAU,wBAAwB,IAAI,YAAY;AAC9D,UAAI;AAAA;AAAA;AAAA;AAMV,SAAS,QAAQ;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,IAAI,YAAY,IAAI,UAAU;AAC5B,WAAO,CAAC,CAAC,QAAQ,IAAI,UAAU,IAAI;AAAA;AAAA,EAErC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,iBAAiB;AAAA,EACjB;AAAA;AAQF,SAAS,MAAM,SAAU,SAAS;AAChC,SAAO,QAAQ;AAAA;AAQjB,SAAS,QAAQ,WAAY;AAC3B,WAAS,OAAO,UAAU,QAAQ,WAAU,IAAI,MAAM,OAAO,OAAO,GAAG,OAAO,MAAM,QAAQ;AAC1F,aAAQ,QAAQ,UAAU;AAAA;AAG5B,MAAI,SAAQ,GAAG,gBAAgB;AAAO,eAAU,SAAQ;AACxD,WAAQ,QAAQ,SAAU,QAAQ;AAChC,QAAI,CAAC,OAAO,aAAa,CAAC,OAAO,UAAU,aAAa;AACtD,YAAM,gEAAgE,OAAO,GAAG,SAAS,KAAK;AAAA;AAGhG,QAAI,OAAO;AAAO,eAAS,QAAQ,eAAe,eAAe,IAAI,SAAS,QAAQ,OAAO;AAC7F,kBAAc,MAAM;AAAA;AAAA;AAUxB,SAAS,SAAS,SAAU,IAAI,SAAS;AACvC,SAAO,IAAI,SAAS,IAAI;AAAA;AAI1B,SAAS,UAAU;AAEnB,IAAI,cAAc;AAAlB,IACI;AADJ,IAEI;AAFJ,IAGI,YAAY;AAHhB,IAII;AAJJ,IAKI;AALJ,IAMI;AANJ,IAOI;AAEJ,4BAA4B;AAC1B,wBAAsB;AACpB,SAAK,WAAW;AAAA,MACd,QAAQ;AAAA,MACR,yBAAyB;AAAA,MACzB,mBAAmB;AAAA,MACnB,aAAa;AAAA,MACb,cAAc;AAAA;AAGhB,aAAS,MAAM,MAAM;AACnB,UAAI,GAAG,OAAO,OAAO,OAAO,OAAO,KAAK,QAAQ,YAAY;AAC1D,aAAK,MAAM,KAAK,IAAI,KAAK;AAAA;AAAA;AAAA;AAK/B,aAAW,YAAY;AAAA,IACrB,aAAa,qBAAqB,MAAM;AACtC,UAAI,gBAAgB,KAAK;AAEzB,UAAI,KAAK,SAAS,iBAAiB;AACjC,WAAG,UAAU,YAAY,KAAK;AAAA,aACzB;AACL,YAAI,KAAK,QAAQ,gBAAgB;AAC/B,aAAG,UAAU,eAAe,KAAK;AAAA,mBACxB,cAAc,SAAS;AAChC,aAAG,UAAU,aAAa,KAAK;AAAA,eAC1B;AACL,aAAG,UAAU,aAAa,KAAK;AAAA;AAAA;AAAA;AAAA,IAIrC,mBAAmB,2BAA2B,OAAO;AACnD,UAAI,gBAAgB,MAAM;AAG1B,UAAI,CAAC,KAAK,QAAQ,kBAAkB,CAAC,cAAc,QAAQ;AACzD,aAAK,kBAAkB;AAAA;AAAA;AAAA,IAG3B,MAAM,iBAAgB;AACpB,UAAI,KAAK,SAAS,iBAAiB;AACjC,YAAI,UAAU,YAAY,KAAK;AAAA,aAC1B;AACL,YAAI,UAAU,eAAe,KAAK;AAClC,YAAI,UAAU,aAAa,KAAK;AAChC,YAAI,UAAU,aAAa,KAAK;AAAA;AAGlC;AACA;AACA;AAAA;AAAA,IAEF,SAAS,mBAAmB;AAC1B,mBAAa,eAAe,WAAW,YAAY,6BAA6B,kBAAkB,kBAAkB;AACpH,kBAAY,SAAS;AAAA;AAAA,IAEvB,2BAA2B,mCAAmC,KAAK;AACjE,WAAK,kBAAkB,KAAK;AAAA;AAAA,IAE9B,mBAAmB,2BAA2B,KAAK,UAAU;AAC3D,UAAI,QAAQ;AAEZ,UAAI,IAAK,KAAI,UAAU,IAAI,QAAQ,KAAK,KAAK,SACzC,IAAK,KAAI,UAAU,IAAI,QAAQ,KAAK,KAAK,SACzC,OAAO,SAAS,iBAAiB,GAAG;AACxC,mBAAa;AAKb,UAAI,YAAY,KAAK,QAAQ,2BAA2B,QAAQ,cAAc,QAAQ;AACpF,mBAAW,KAAK,KAAK,SAAS,MAAM;AAEpC,YAAI,iBAAiB,2BAA2B,MAAM;AAEtD,YAAI,aAAc,EAAC,8BAA8B,MAAM,mBAAmB,MAAM,kBAAkB;AAChG,wCAA8B;AAE9B,uCAA6B,YAAY,WAAY;AACnD,gBAAI,UAAU,2BAA2B,SAAS,iBAAiB,GAAG,IAAI;AAE1E,gBAAI,YAAY,gBAAgB;AAC9B,+BAAiB;AACjB;AAAA;AAGF,uBAAW,KAAK,MAAM,SAAS,SAAS;AAAA,aACvC;AACH,4BAAkB;AAClB,4BAAkB;AAAA;AAAA,aAEf;AAEL,YAAI,CAAC,KAAK,QAAQ,gBAAgB,2BAA2B,MAAM,UAAU,6BAA6B;AACxG;AACA;AAAA;AAGF,mBAAW,KAAK,KAAK,SAAS,2BAA2B,MAAM,QAAQ;AAAA;AAAA;AAAA;AAI7E,SAAO,SAAS,YAAY;AAAA,IAC1B,YAAY;AAAA,IACZ,qBAAqB;AAAA;AAAA;AAIzB,4BAA4B;AAC1B,cAAY,QAAQ,SAAU,aAAY;AACxC,kBAAc,YAAW;AAAA;AAE3B,gBAAc;AAAA;AAGhB,2CAA2C;AACzC,gBAAc;AAAA;AAGhB,IAAI,aAAa,SAAS,SAAU,KAAK,SAAS,SAAQ,YAAY;AAEpE,MAAI,CAAC,QAAQ;AAAQ;AACrB,MAAI,IAAK,KAAI,UAAU,IAAI,QAAQ,KAAK,KAAK,SACzC,IAAK,KAAI,UAAU,IAAI,QAAQ,KAAK,KAAK,SACzC,OAAO,QAAQ,mBACf,QAAQ,QAAQ,aAChB,cAAc;AAClB,MAAI,qBAAqB,OACrB;AAEJ,MAAI,iBAAiB,SAAQ;AAC3B,mBAAe;AACf;AACA,eAAW,QAAQ;AACnB,qBAAiB,QAAQ;AAEzB,QAAI,aAAa,MAAM;AACrB,iBAAW,2BAA2B,SAAQ;AAAA;AAAA;AAIlD,MAAI,YAAY;AAChB,MAAI,gBAAgB;AAEpB,KAAG;AACD,QAAI,KAAK,eACL,OAAO,QAAQ,KACf,MAAM,KAAK,KACX,SAAS,KAAK,QACd,OAAO,KAAK,MACZ,QAAQ,KAAK,OACb,QAAQ,KAAK,OACb,SAAS,KAAK,QACd,aAAa,QACb,aAAa,QACb,cAAc,GAAG,aACjB,eAAe,GAAG,cAClB,QAAQ,IAAI,KACZ,aAAa,GAAG,YAChB,aAAa,GAAG;AAEpB,QAAI,OAAO,aAAa;AACtB,mBAAa,QAAQ,eAAgB,OAAM,cAAc,UAAU,MAAM,cAAc,YAAY,MAAM,cAAc;AACvH,mBAAa,SAAS,gBAAiB,OAAM,cAAc,UAAU,MAAM,cAAc,YAAY,MAAM,cAAc;AAAA,WACpH;AACL,mBAAa,QAAQ,eAAgB,OAAM,cAAc,UAAU,MAAM,cAAc;AACvF,mBAAa,SAAS,gBAAiB,OAAM,cAAc,UAAU,MAAM,cAAc;AAAA;AAG3F,QAAI,KAAK,cAAe,MAAK,IAAI,QAAQ,MAAM,QAAQ,aAAa,QAAQ,eAAgB,MAAK,IAAI,OAAO,MAAM,QAAQ,CAAC,CAAC;AAC5H,QAAI,KAAK,cAAe,MAAK,IAAI,SAAS,MAAM,QAAQ,aAAa,SAAS,gBAAiB,MAAK,IAAI,MAAM,MAAM,QAAQ,CAAC,CAAC;AAE9H,QAAI,CAAC,YAAY,YAAY;AAC3B,eAAS,IAAI,GAAG,KAAK,WAAW,KAAK;AACnC,YAAI,CAAC,YAAY,IAAI;AACnB,sBAAY,KAAK;AAAA;AAAA;AAAA;AAKvB,QAAI,YAAY,WAAW,MAAM,MAAM,YAAY,WAAW,MAAM,MAAM,YAAY,WAAW,OAAO,IAAI;AAC1G,kBAAY,WAAW,KAAK;AAC5B,kBAAY,WAAW,KAAK;AAC5B,kBAAY,WAAW,KAAK;AAC5B,oBAAc,YAAY,WAAW;AAErC,UAAI,MAAM,KAAK,MAAM,GAAG;AACtB,6BAAqB;AAGrB,oBAAY,WAAW,MAAM,YAAY,WAAY;AAEnD,cAAI,cAAc,KAAK,UAAU,GAAG;AAClC,qBAAS,OAAO,aAAa;AAAA;AAI/B,cAAI,gBAAgB,YAAY,KAAK,OAAO,KAAK,YAAY,KAAK,OAAO,KAAK,QAAQ;AACtF,cAAI,gBAAgB,YAAY,KAAK,OAAO,KAAK,YAAY,KAAK,OAAO,KAAK,QAAQ;AAEtF,cAAI,OAAO,mBAAmB,YAAY;AACxC,gBAAI,eAAe,KAAK,SAAS,QAAQ,WAAW,UAAU,eAAe,eAAe,KAAK,YAAY,YAAY,KAAK,OAAO,QAAQ,YAAY;AACvJ;AAAA;AAAA;AAIJ,mBAAS,YAAY,KAAK,OAAO,IAAI,eAAe;AAAA,UACpD,KAAK;AAAA,UACL,OAAO;AAAA,YACL;AAAA;AAAA;AAIR;AAAA,WACO,QAAQ,gBAAgB,kBAAkB,eAAgB,iBAAgB,2BAA2B,eAAe;AAE7H,cAAY;AAAA,GACX;AAEH,IAAI,OAAO,eAAc,MAAM;AAC7B,MAAI,gBAAgB,KAAK,eACrB,eAAc,KAAK,aACnB,UAAS,KAAK,QACd,iBAAiB,KAAK,gBACtB,wBAAwB,KAAK,uBAC7B,qBAAqB,KAAK,oBAC1B,uBAAuB,KAAK;AAChC,MAAI,CAAC;AAAe;AACpB,MAAI,aAAa,gBAAe;AAChC;AACA,MAAI,QAAQ,cAAc,kBAAkB,cAAc,eAAe,SAAS,cAAc,eAAe,KAAK;AACpH,MAAI,SAAS,SAAS,iBAAiB,MAAM,SAAS,MAAM;AAC5D;AAEA,MAAI,cAAc,CAAC,WAAW,GAAG,SAAS,SAAS;AACjD,0BAAsB;AACtB,SAAK,QAAQ;AAAA,MACX,QAAQ;AAAA,MACR,aAAa;AAAA;AAAA;AAAA;AAKnB,kBAAkB;AAAA;AAElB,OAAO,YAAY;AAAA,EACjB,YAAY;AAAA,EACZ,WAAW,mBAAmB,OAAO;AACnC,QAAI,qBAAoB,MAAM;AAC9B,SAAK,aAAa;AAAA;AAAA,EAEpB,SAAS,iBAAiB,OAAO;AAC/B,QAAI,UAAS,MAAM,QACf,eAAc,MAAM;AACxB,SAAK,SAAS;AAEd,QAAI,cAAa;AACf,mBAAY;AAAA;AAGd,QAAI,cAAc,SAAS,KAAK,SAAS,IAAI,KAAK,YAAY,KAAK;AAEnE,QAAI,aAAa;AACf,WAAK,SAAS,GAAG,aAAa,SAAQ;AAAA,WACjC;AACL,WAAK,SAAS,GAAG,YAAY;AAAA;AAG/B,SAAK,SAAS;AAEd,QAAI,cAAa;AACf,mBAAY;AAAA;AAAA;AAAA,EAGhB;AAAA;AAGF,SAAS,QAAQ;AAAA,EACf,YAAY;AAAA;AAGd,kBAAkB;AAAA;AAElB,OAAO,YAAY;AAAA,EACjB,SAAS,kBAAiB,OAAO;AAC/B,QAAI,UAAS,MAAM,QACf,eAAc,MAAM;AACxB,QAAI,iBAAiB,gBAAe,KAAK;AACzC,mBAAe;AACf,YAAO,cAAc,QAAO,WAAW,YAAY;AACnD,mBAAe;AAAA;AAAA,EAEjB;AAAA;AAGF,SAAS,QAAQ;AAAA,EACf,YAAY;AAAA;AAGd,SAAS,MAAM,IAAI;AACnB,SAAS,MAAM,QAAQ;AAEvB,sBAAsB;AAClB,MAAI,OAAO,WAAW,aAAa;AAC/B,WAAO,OAAO;AAAA;AAElB,SAAO,OAAO;AAAA;AAElB,IAAM,UAAU;AAChB,gBAAgB,IAAI;AAChB,QAAM,QAAQ,OAAO,OAAO;AAC5B,SAAO,kBAAkB,KAAK;AAC1B,UAAM,MAAM,MAAM;AAClB,WAAO,OAAQ,OAAM,OAAO,GAAG;AAAA;AAAA;AAGvC,IAAM,QAAQ;AACd,IAAM,WAAW,OAAO,CAAC,QAAQ,IAAI,QAAQ,OAAO,CAAC,GAAG,MAAO,IAAI,EAAE,gBAAgB;AACrF,oBAAoB,MAAM;AACtB,MAAI,KAAK,kBAAkB,MAAM;AAC7B,SAAK,cAAc,YAAY;AAAA;AAAA;AAGvC,sBAAsB,YAAY,MAAM,UAAU;AAC9C,QAAM,UAAU,aAAa,IACvB,WAAW,SAAS,KACpB,WAAW,SAAS,WAAW,GAAG;AACxC,aAAW,aAAa,MAAM;AAAA;AAGlC,wBAAwB,QAAQ,SAAS;AACrC,SAAO,OAAO,OAAO,QAAQ,QAAQ;AAAA;AAEzC,wBAAwB,OAAO,UAAU,eAAc,cAAc;AACjE,MAAI,CAAC,OAAO;AACR,WAAO;AAAA;AAEX,QAAM,eAAe,OAAO,OAAO;AACnC,QAAM,cAAc,SAAS,SAAS;AACtC,QAAM,aAAa,CAAC,GAAG,UAAU,IAAI,CAAC,KAAK,QAAQ,OAAO,cAAc,aAAa,SAAS,aAAa,QAAQ;AACnH,SAAO;AAAA;AAEX,cAAc,SAAS,SAAS;AAE5B,OAAK,UAAU,MAAM,KAAK,MAAM,QAAQ,eAAe;AAAA;AAE3D,yBAAyB,SAAS;AAE9B,SAAO,aAAW;AAEd,QAAI,KAAK,aAAa,MAAM;AAExB,WAAK,WAAW,SAAS;AAAA;AAG7B,SAAK,KAAK,MAAM,SAAS;AAAA;AAAA;AAGjC,0BAA0B,MAAM;AAC5B,SAAO,CAAC,oBAAoB,mBAAmB,SAAS;AAAA;AAE5D,sBAAsB,OAAO;AACzB,MAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AAC9B,WAAO;AAAA;AAGX,QAAM,CAAC,CAAE,SAAU;AACnB,MAAI,CAAC,MAAM;AACP,WAAO;AAAA;AAGX,SAAO,iBAAiB,KAAK;AAAA;AAEjC,gCAAgC,QAAQ,eAAe;AACnD,MAAI,CAAC,eAAe;AAChB,WAAO;AAAA;AAEX,SAAO,IAAK,cAAc,UAAU,cAAc;AAAA;AAEtD,IAAM,iBAAiB,CAAC,SAAS,OAAO,UAAU,UAAU;AAC5D,IAAM,eAAe,CAAC,UAAU,YAAY,QAAQ,UAAU;AAC9D,IAAM,qBAAqB,CAAC,QAAQ,GAAG,gBAAgB,GAAG,cAAc,IAAI,SAAO,OAAO;AAE1F,IAAI,kBAAkB;AACtB,IAAM,QAAQ;AAAA,EACV,SAAS;AAAA,EACT,MAAM;AAAA,IACF,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA;AAAA,EAEb,oBAAoB;AAAA,IAChB,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEb,OAAO;AAAA,IACH,MAAM;AAAA,IACN,SAAS,CAAC,aAAa;AACnB,aAAO;AAAA;AAAA;AAAA,EAGf,KAAK;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEb,MAAM;AAAA,IACF,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEb,eAAe;AAAA,IACX,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA;AAAA,EAEb,WAAW;AAAA,IACP,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,EAEb,YAAY;AAAA,IACR,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA;AAAA;AAGjB,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,MAAM;AAAA,EACN,cAAc;AAAA,EACd,OAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG,eAAe,IAAI,OAAK,EAAE;AAAA,IAC7B,GAAG,aAAa,IAAI,OAAK,EAAE;AAAA;AAAA,EAE/B;AAAA,EACA,OAAO;AACH,WAAO;AAAA,MACH,gBAAgB;AAAA,MAChB,6BAA6B;AAAA,MAC7B,cAAc;AAAA,MACd,cAAc;AAAA,MACd,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB,SAAS;AAAA;AAAA;AAAA,EAGjB,SAAS;AACL,UAAM,QAAQ,KAAK,OAAO,UAAU,KAAK,OAAO,YAAY;AAC5D,UAAM,QAAQ,uBAAuB,KAAK,QAAQ,KAAK;AACvD,QAAI,CAAC;AACD,aAAO,EAAE,KAAK,UAAU,OAAO;AACnC,SAAK,iBAAiB,aAAa;AACnC,WAAO,EAAE,KAAK,UAAU,OAAO;AAAA;AAAA,EAEnC,UAAU;AACN,QAAI,KAAK,SAAS,QAAQ,KAAK,eAAe,MAAM;AAChD,cAAQ,MAAM;AAAA;AAAA;AAAA,EAGtB,UAAU;AACN,UAAM,eAAe;AACrB,mBAAe,QAAQ,SAAO;AAC1B,mBAAa,OAAO,OAAO,gBAAgB,KAAK,MAAM;AAAA;AAE1D,iBAAa,QAAQ,SAAO;AACxB,mBAAa,OAAO,OAAO,KAAK,KAAK,MAAM;AAAA;AAE/C,UAAM,aAAa,OAAO,KAAK,KAAK,QAAQ,OAAO,CAAC,KAAK,QAAQ;AAC7D,UAAI,SAAS,QAAQ,KAAK,OAAO;AACjC,aAAO;AAAA,OACR;AACH,UAAM,UAAU,OAAO,OAAO,IAAI,YAAY,cAAc;AAAA,MACxD,QAAQ,CAAC,KAAK,kBAAkB;AAC5B,eAAO,KAAK,WAAW,KAAK;AAAA;AAAA;AAGpC,KAAE,gBAAe,YAAa,SAAQ,YAAY;AAClD,UAAM,mBAAmB,KAAK,IAAI,aAAa,IAAI,KAAK,MAAM,KAAK,IAAI;AACvE,SAAK,YAAY,IAAI,SAAS,kBAAkB;AAChD,qBAAiB,0BAA0B;AAC3C,SAAK;AAAA;AAAA,EAET,gBAAgB;AACZ,QAAI;AACA,UAAI,KAAK,cAAc;AACnB,aAAK,UAAU;AAAA,aAEhB,OAAP;AAAA;AAAA;AAAA,EAEJ,UAAU;AAAA,IACN,WAAW;AACP,aAAO,KAAK,OAAO,KAAK,OAAO,KAAK;AAAA;AAAA;AAAA,EAG5C,OAAO;AAAA,IACH,QAAQ;AAAA,MACJ,QAAQ,gBAAgB;AACpB,aAAK,cAAc;AAAA;AAAA,MAEvB,MAAM;AAAA;AAAA,IAEV,WAAW;AACP,WAAK;AAAA;AAAA;AAAA,EAGb,SAAS;AAAA,IACL,SAAS;AACL,aAAO,KAAK,YAAY,iBAAiB,KAAK,aAAa,KAAK;AAAA;AAAA,IAEpE,cAAc,gBAAgB;AAC1B,eAAS,YAAY,gBAAgB;AACjC,cAAM,QAAQ,SAAS;AACvB,YAAI,mBAAmB,QAAQ,WAAW,IAAI;AAC1C,eAAK,UAAU,OAAO,OAAO,eAAe;AAAA;AAAA;AAAA;AAAA,IAIxD,mBAAmB;AACf,aAAO,KAAK,IAAI;AAAA;AAAA,IAEpB,iBAAiB;AACb,WAAK,UAAU,MAAM;AACjB,aAAK,iBAAiB,eAAe,KAAK,oBAAoB,KAAK,IAAI,UAAU,KAAK,gBAAgB,KAAK;AAAA;AAAA;AAAA,IAGnH,gBAAgB,SAAS;AACrB,YAAM,SAAQ,eAAe,KAAK,sBAAsB,IAAI;AAC5D,UAAI,WAAU,IAAI;AAGd,eAAO;AAAA;AAGX,YAAM,UAAU,KAAK,SAAS;AAC9B,aAAO,CAAE,eAAO;AAAA;AAAA,IAEpB,YAAY,KAAK;AACb,WAAK,UAAU,MAAM;AACjB,aAAK,MAAM,UAAU;AAAA;AAAA;AAAA,IAG7B,UAAU,QAAQ;AACd,UAAI,KAAK,MAAM;AACX,eAAO,KAAK;AACZ;AAAA;AAEJ,YAAM,UAAU,CAAC,GAAG,KAAK;AACzB,aAAO;AACP,WAAK,MAAM,qBAAqB;AAAA;AAAA,IAEpC,aAAa;AACT,YAAM,aAAa,CAAC,SAAS,KAAK,OAAO,GAAG;AAC5C,WAAK,UAAU;AAAA;AAAA,IAEnB,eAAe,WAAU,WAAU;AAC/B,YAAM,iBAAiB,CAAC,SAAS,KAAK,OAAO,WAAU,GAAG,KAAK,OAAO,WAAU,GAAG;AACnF,WAAK,UAAU;AAAA;AAAA,IAEnB,WAAW,UAAU;AACjB,YAAM,UAAU,KAAK;AACrB,YAAM,gBAAgB,QAAQ;AAC9B,aAAO,WAAW,gBAAgB,IAAI,gBAAgB,QAAQ;AAAA;AAAA,IAElE,eAAe;AACX,aAAO,KAAK,OAAO,UAEX,KAAK,OAAO,UAAU,GAAG,oBAC3B;AAAA;AAAA,IAEV,oBAAoB,QAAO;AACvB,UAAI,CAAC,KAAK,sBAAsB,CAAC,KAAK,gBAAgB;AAClD;AAAA;AAEJ,UAAI,QAAQ,KAAK;AACjB,YAAM,QAAO,OAAO;AACpB,YAAM,sBAAsB,KAAK;AACjC,0BAAoB,WAAW;AAC/B,0BAAoB,OAAO;AAAA;AAAA,IAE/B,YAAY,KAAK;AACb,WAAK,UAAU,KAAK,gBAAgB,IAAI;AACxC,UAAI,CAAC,KAAK;AACN;AACJ,UAAI,KAAK,kBAAkB,KAAK,MAAM,KAAK,QAAQ;AACnD,wBAAkB,IAAI;AAAA;AAAA,IAE1B,UAAU,KAAK;AACX,YAAM,UAAU,IAAI,KAAK;AACzB,UAAI,YAAY,QAAW;AACvB;AAAA;AAEJ,iBAAW,IAAI;AACf,YAAM,YAAW,KAAK,WAAW,IAAI;AAErC,WAAK,WAAW,WAAU,GAAG;AAC7B,WAAK;AACL,YAAM,QAAQ,CAAE,SAAS;AACzB,WAAK,YAAY,CAAE;AAAA;AAAA,IAEvB,aAAa,KAAK;AACd,mBAAa,KAAK,KAAK,IAAI,MAAM,IAAI;AACrC,UAAI,IAAI,aAAa,SAAS;AAC1B,mBAAW,IAAI;AACf;AAAA;AAEJ,UAAI,CAAC,KAAK;AACN;AACJ,YAAM,YAAW,KAAK,QAAQ;AAE9B,WAAK,WAAW,WAAU;AAC1B,YAAM,UAAU,CAAE,SAAS,KAAK,QAAQ,SAAS;AACjD,WAAK,oBAAoB;AACzB,WAAK,YAAY,CAAE;AAAA;AAAA,IAEvB,aAAa,KAAK;AACd,iBAAW,IAAI;AACf,mBAAa,IAAI,MAAM,IAAI,MAAM,IAAI;AAErC,YAAM,YAAW,KAAK,QAAQ;AAC9B,YAAM,YAAW,KAAK,WAAW,IAAI;AACrC,WAAK,eAAe,WAAU;AAE9B,YAAM,SAAQ,CAAE,SAAS,KAAK,QAAQ,SAAS,qBAAU;AACzD,WAAK,YAAY,CAAE;AAAA;AAAA,IAEvB,eAAe,KAAK,cAAc;AAC9B,UAAI,eAAe,iBACd,KAAI,iBAAiB,KAAK;AAAA;AAAA,IAEnC,WAAW,KAAK,eAAe;AAC3B,YAAM,SAAS,KAAK;AACpB,UAAI,CAAC,UAAU,CAAC,KAAK,UAAU;AAC3B,eAAO;AAAA;AAEX,YAAM,iBAAiB,KAAK,+BAA+B;AAC3D,YAAM,iBAAiB,KAAK;AAC5B,YAAM,cAAc,KAAK,mBAAmB,gBAAgB;AAC5D,aAAO,OAAO,gBAAgB,CAAE;AAChC,YAAM,UAAU,OAAO,OAAO,IAAI,KAAK;AAAA,QACnC;AAAA,QACA;AAAA;AAEJ,aAAO,OAAO,SAAS;AAAA;AAAA,IAE3B,YAAY;AACR,WAAK;AACL,wBAAkB;AAAA;AAAA,IAEtB,sBAAsB,YAAY;AAC9B,aAAO,WAAW;AAAA;AAAA,IAEtB,+BAA+B,CAAE,IAAI,UAAW;AAC5C,YAAM,YAAY,KAAK,sBAAsB;AAC7C,UAAI,CAAC,WAAW;AACZ,eAAO,CAAE;AAAA;AAEb,YAAM,OAAO,UAAU;AACvB,YAAM,UAAU,CAAE,MAAM;AACxB,UAAI,OAAO,WAAW,QAAQ,UAAU,iBAAiB;AACrD,cAAM,cAAc,UAAU,gBAAgB;AAC9C,YAAI,aAAa;AACb,iBAAO,OAAO,OAAO,aAAa;AAAA;AAAA;AAG1C,aAAO;AAAA;AAAA,IAEX,mBAAmB,gBAAgB,KAAK;AACpC,YAAM,cAAc,CAAC,GAAG,IAAI,GAAG,UAAU,OAAO,QAAM,GAAG,MAAM,eAAe;AAC9E,UAAI,YAAY,WAAW;AACvB,eAAO;AACX,YAAM,kBAAkB,YAAY,QAAQ,IAAI;AAChD,YAAM,eAAe,eAAe,UAAU,WAAW;AACzD,YAAM,gBAAgB,YAAY,QAAQ,qBAAqB;AAC/D,aAAO,iBAAiB,CAAC,IAAI,kBACvB,eACA,eAAe;AAAA;AAAA;AAAA;",
  "names": []
}
